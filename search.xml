<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>服务器博客更新</title>
      <link href="/%E5%8D%9A%E5%AE%A2/2020-04-28-%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0.html"/>
      <url>/%E5%8D%9A%E5%AE%A2/2020-04-28-%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0.html</url>
      
        <content type="html"><![CDATA[<p>使用GitHub作为中转仓库，同时还能保存自己的代码，避免在文件传输过程中的丢失。</p><p>步骤如下：</p><ol><li><p>在自己本地写好博客后顺序执行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li><li><p>使用CRT链接服务器</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 进入项目根路径</span></span><br><span class="line"><span class="built_in">cd</span> /var/<span class="built_in">local</span>/webWork/Share</span><br><span class="line"><span class="comment">## 更新</span></span><br><span class="line">git pull https://github.com/foreverSFJ/Share.git</span><br></pre></td></tr></table></figure><blockquote><p>使用本方法需要服务器安装好Git，同时第一次同步需要在项目路径下执行<code>git init</code></p></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maupassant主题优化</title>
      <link href="/%E5%8D%9A%E5%AE%A2/2020-04-28-Maupassant%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96.html"/>
      <url>/%E5%8D%9A%E5%AE%A2/2020-04-28-Maupassant%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-备案信息"><a href="#1-备案信息" class="headerlink" title="1. 备案信息"></a>1. 备案信息</h1><p>由于国内网站都需要备案，并在网站底部添加备案信息，但是Maupassant主题中没有这方面的配置，所以基于原作者的网站样式，在作者的源码上添加备案信息。</p><h2 id="1-1-完成备案"><a href="#1-1-完成备案" class="headerlink" title="1.1 完成备案"></a>1.1 完成备案</h2><p>在添加备案信息之前需要完成网站的备案，取得网安备案号和ICP备案号。具体备案方法在每一个服务器提供商处都可代理完成。可按提示完成，大约需要3-7天。</p><h2 id="1-2-修改源码"><a href="#1-2-修改源码" class="headerlink" title="1.2 修改源码"></a>1.2 修改源码</h2><p>在<code>\maupassant\layout\_partial</code>文件夹下的<code>footer.pug</code>文件中，添加自己的备案信息。代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#footer= 'Copyright © ' + date(Date.now(), 'YYYY') + ' '</span><br><span class="line">  a(href=url_for('.'), rel='nofollow')= config.title + ' | '</span><br><span class="line">  |</span><br><span class="line">  a(rel='nofollow', target='_blank', href='http://beian.miit.gov.cn')  鄂ICP备 19017407号-1 </span><br><span class="line">  |  | &amp;nbsp;</span><br><span class="line">  img.nofancybox(src='//cdn.foreversfj.com/image/blog/20190728/N0BTF6mJ1Ilb.png', style='margin-bottom: -4px;')</span><br><span class="line">  a(rel='nofollow', target='_blank', href='http://www.beian.gov.cn') &amp;nbsp;鄂公网安备 42011102003450号</span><br><span class="line">  br</span><br><span class="line">  span#timeDate 载入天数...</span><br><span class="line">  span<span class="meta">#times 载入时分秒...</span></span><br><span class="line">  script.</span><br><span class="line">    var now = <span class="keyword">new</span> Date();</span><br><span class="line">    <span class="function">function <span class="title">createtime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    var grt= <span class="keyword">new</span> Date(<span class="string">"07/09/2018 12:49:00"</span>);</span><br><span class="line">    now.setTime(now.getTime()+<span class="number">250</span>);</span><br><span class="line">    days = (now - grt ) / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>; dnum = Math.<span class="built_in">floor</span>(days);</span><br><span class="line">    hours = (now - grt ) / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> - (<span class="number">24</span> * dnum); hnum = Math.<span class="built_in">floor</span>(hours);</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">String</span>(hnum).length ==<span class="number">1</span> )&#123;hnum = <span class="string">"0"</span> + hnum;&#125; minutes = (now - grt ) / <span class="number">1000</span> /<span class="number">60</span> - (<span class="number">24</span> * <span class="number">60</span> * dnum) - (<span class="number">60</span> * hnum);</span><br><span class="line">    mnum = Math.<span class="built_in">floor</span>(minutes); <span class="keyword">if</span>(<span class="keyword">String</span>(mnum).length ==<span class="number">1</span> )&#123;mnum = <span class="string">"0"</span> + mnum;&#125;</span><br><span class="line">    seconds = (now - grt ) / <span class="number">1000</span> - (<span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * dnum) - (<span class="number">60</span> * <span class="number">60</span> * hnum) - (<span class="number">60</span> * mnum);</span><br><span class="line">    snum = Math.round(seconds); <span class="keyword">if</span>(<span class="keyword">String</span>(snum).length ==<span class="number">1</span> )&#123;snum = <span class="string">"0"</span> + snum;&#125;</span><br><span class="line">    document.getElementById(<span class="string">"timeDate"</span>).innerHTML = <span class="string">"运行 "</span>+dnum+<span class="string">" 天 "</span>;</span><br><span class="line">    document.getElementById(<span class="string">"times"</span>).innerHTML = hnum + <span class="string">" 小时 "</span> + mnum + <span class="string">" 分 "</span> + snum + <span class="string">" 秒"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    setInterval(<span class="string">"createtime()"</span>,<span class="number">250</span>);</span><br><span class="line">  br</span><br><span class="line">  div</span><br><span class="line">    .github-badge(style='margin-right: 3px;')</span><br><span class="line">      a(href='https://hexo.io', target='_black', rel='nofollow')</span><br><span class="line">        span.badge-subject Powered by</span><br><span class="line">        span.badge-value.bg-blue Hexo</span><br><span class="line">    .github-badge</span><br><span class="line">      a(href='https://github.com/tufu9441/maupassant-hexo', target='_black', rel='nofollow')</span><br><span class="line">        span.badge-subject Theme</span><br><span class="line">        span.badge-value.bg-yellowgreen Maupassant</span><br></pre></td></tr></table></figure><p>由于作者的主题使用了<code>jade</code>语言，如果又看不懂的，可以先自己写好<code>foot</code>的<code>html</code>格式的语言，然后通过<a href="http://www.html2jade.org/" target="_blank" rel="noopener">在线工具</a>转成<code>jade</code>语言，也就是<code>.pug</code>格式的文件。<font color=red>注意，jade通过制表位和空格代替层级，不能随意删除。而且tab和空格不能同时使用。</font></p><p>另外，在使用的时候发现作者的更新库中<code>style.scss</code>文件缺少一个样式，手动复制补全，如下：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.github-badge</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">text-shadow</span>: none;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.25</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ABBAC3</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">5px</span>; &#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>; &#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="comment">/*height: "calc(%s * 1.25)" % $fontsize-footnote*/</span></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">1.25em</span>;</span><br><span class="line">    <span class="attribute">vertical-align</span>: top; &#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.badge-subject</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#555</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">4px</span> <span class="number">4px</span> <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">border-top-left-radius</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">border-bottom-left-radius</span>: <span class="number">4px</span>; &#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.badge-value</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">6px</span> <span class="number">4px</span> <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">border-top-right-radius</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">border-bottom-right-radius</span>: <span class="number">4px</span>; &#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-brightgreen</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#4c1</span> <span class="meta">!important</span>; &#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-green</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#97ca00</span> <span class="meta">!important</span>; &#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-yellowgreen</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#a4a61d</span> <span class="meta">!important</span>; &#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-orange</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#FE7D37</span> <span class="meta">!important</span>; &#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-yellow</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#dfb317</span> <span class="meta">!important</span>; &#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-blueviolet</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#8A2BE2</span> <span class="meta">!important</span>; &#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-pink</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#FFC0CB</span> <span class="meta">!important</span>; &#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-red</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#e05d44</span> <span class="meta">!important</span>; &#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-blue</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#007EC6</span> <span class="meta">!important</span>; &#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-grey</span>,</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-gray</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#555</span> <span class="meta">!important</span>; &#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-lightgrey</span>,</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-lightgray</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#9f9f9f</span> <span class="meta">!important</span>; &#125;</span><br></pre></td></tr></table></figure><p>经过修改之后，网站的地步就会有自己的备案信息了！</p><h1 id="2-添加live2D效果"><a href="#2-添加live2D效果" class="headerlink" title="2. 添加live2D效果"></a>2. 添加live2D效果</h1><p>使用live2d可以使自己的网站更可爱一下，有的model还有对话效果，很不错。</p><h2 id="2-1-步骤"><a href="#2-1-步骤" class="headerlink" title="2.1 步骤"></a>2.1 步骤</h2><h3 id="2-1-1-安装live2d"><a href="#2-1-1-安装live2d" class="headerlink" title="2.1.1 安装live2d"></a>2.1.1 安装live2d</h3><p>先检查博客主目录下面的  <code>package.json</code>里是否有<code>&quot;hexo-helper-live2d&quot;: &quot;^3.0.3&quot;,</code>依赖，有的话可以先卸载。 使用命令：<code>npm uninstall hexo-helper-live2d</code>。</p><p> 之后再安装：<code>npm install --save hexo-helper-live2d</code></p><p> <strong>注意：</strong>命令都是在你的hexo博客的根目录下执行</p><p>在安装完成之后，再去 <code>node_moduels</code>目录下，可以看到有如下文件夹，这些都是动画主配置</p><p><img src="http://cdn.foreversfj.com/image/blog/20200428/0Ocpp7wAsQzu.png!share" alt=""></p><h3 id="2-1-2-安装模型"><a href="#2-1-2-安装模型" class="headerlink" title="2.1.2 安装模型"></a>2.1.2 安装模型</h3><p>live2d有很多模型，名称可以到<a href="https://github.com/xiazeyu/live2d-widget-models" target="_blank" rel="noopener">这里</a>参考，一些模型的预览可以在<a href="https://huaji8.top/post/live2d-plugin-2.0/" target="_blank" rel="noopener">这里</a>，使用npm安装。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install live2d-widget-model-shizuku</span><br></pre></td></tr></table></figure><p>常用模型名称：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">live2d-widget-model-chitose</span><br><span class="line">live2d-widget-model-epsilon2_1</span><br><span class="line">live2d-widget-model-gf</span><br><span class="line">live2d-widget-model-haru&#x2F;01 (use npm install --save live2d-widget-model-haru)</span><br><span class="line">live2d-widget-model-haru&#x2F;02 (use npm install --save live2d-widget-model-haru)</span><br><span class="line">live2d-widget-model-haruto</span><br><span class="line">live2d-widget-model-hibiki</span><br><span class="line">live2d-widget-model-hijiki</span><br><span class="line">live2d-widget-model-izumi</span><br><span class="line">live2d-widget-model-koharu</span><br><span class="line">live2d-widget-model-miku</span><br><span class="line">live2d-widget-model-ni-j</span><br><span class="line">live2d-widget-model-nico</span><br><span class="line">live2d-widget-model-nietzsche</span><br><span class="line">live2d-widget-model-nipsilon</span><br><span class="line">live2d-widget-model-nito</span><br><span class="line">live2d-widget-model-shizuku</span><br><span class="line">live2d-widget-model-tororo</span><br><span class="line">live2d-widget-model-tsumiki</span><br><span class="line">live2d-widget-model-unitychan</span><br><span class="line">live2d-widget-model-wanko</span><br><span class="line">live2d-widget-model-z16</span><br></pre></td></tr></table></figure><h3 id="2-1-3-使用"><a href="#2-1-3-使用" class="headerlink" title="2.1.3 使用"></a>2.1.3 使用</h3><p>安装好live2d及其模型之后，在hexo的配置文件<code>_config.yml</code>中添加如下配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-tororo</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">left</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>之后，就可以启动hexo查看效果了：</p><p><img src="http://cdn.foreversfj.com/image/blog/20200428/MqIbc6qSViy2.png!share" alt=""></p><h1 id="3-SEO优化"><a href="#3-SEO优化" class="headerlink" title="3. SEO优化"></a>3. SEO优化</h1><h2 id="3-1-添加百度sitemap"><a href="#3-1-添加百度sitemap" class="headerlink" title="3.1 添加百度sitemap"></a>3.1 添加百度sitemap</h2><h3 id="3-1-1-生成-sitemap-文件"><a href="#3-1-1-生成-sitemap-文件" class="headerlink" title="3.1.1 生成 sitemap 文件"></a>3.1.1 生成 sitemap 文件</h3><p>需要先安装两个 hexo 插件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save-dev</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save-dev</span><br></pre></td></tr></table></figure><p>一个是传统的 sitemap，一个是百度专有的 sitemap。多多益善。<br> 安装完这两个插件，再重启 hexo，在本地访问 <a href="http://127.0.0.4000/sitemap.xml">http://127.0.0.4000/sitemap.xml</a> 和 <a href="http://127.0.0.4000/baidusitemap.xml">http://127.0.0.4000/baidusitemap.xml</a> 就能正确的展示出两个sitemap 文件了。</p><h3 id="3-1-2-注册百度站长平台"><a href="#3-1-2-注册百度站长平台" class="headerlink" title="3.1.2 注册百度站长平台"></a>3.1.2 注册百度站长平台</h3><p>直接根据提示注册即可</p><h3 id="3-1-3-添加个人网站"><a href="#3-1-3-添加个人网站" class="headerlink" title="3.1.3 添加个人网站"></a>3.1.3 添加个人网站</h3><p>进入站点管理添加需要管理的网站地址，第二步的验证有三种方式：文件、html标签、cname。因为个人使用的是 <a href="http://coding.net" target="_blank" rel="noopener">coding</a> 的<code>pages</code>服务，域名是属于系统分配的，所以无法使用cname验证来完成，当然如果这是你的个人域名，这个方案也是挺容易的。</p><p>其次我尝试使用文件的方式来实现，但是不幸的是，失败了。经过调查发现是因为 hexo 在生成文章的时候会把所有的<code>.html</code> 文件处理一遍，加上一些额外的东西，结果就是导致了 百度站点验证的文件里面多了很多其他东西，所以就无法验证通过。</p><p>所以最终的方案就是添加 html 标签了。添加完相应的标签之后，上传到自己的博客之中，多刷新几次，百度站点那边就会通过了。</p><h3 id="3-1-4-提交-sitemap-文件"><a href="#3-1-4-提交-sitemap-文件" class="headerlink" title="3.1.4 提交 sitemap 文件"></a>3.1.4 提交 sitemap 文件</h3><p>转到链接提交处，选择自己的站点网址。找到自动提交，选择<code>sitemap</code>。按照提示的格式添加自己的sitemap文件</p><p><img src="http://cdn.foreversfj.com/image/blog/20200428/qhcbmyrWPDPu.png!share" alt=""></p><p>接下来要做的就是等待了，过上一两天就会在这里看到提取的 url 数量了</p><h2 id="3-2-Google"><a href="#3-2-Google" class="headerlink" title="3.2 Google"></a>3.2 Google</h2>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Maupassant </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo新建文章</title>
      <link href="/%E5%8D%9A%E5%AE%A2/2020-04-28-Hexo%E6%96%B0%E5%BB%BA%E6%96%87%E7%AB%A0.html"/>
      <url>/%E5%8D%9A%E5%AE%A2/2020-04-28-Hexo%E6%96%B0%E5%BB%BA%E6%96%87%E7%AB%A0.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-文件新建"><a href="#1-文件新建" class="headerlink" title="1. 文件新建"></a>1. 文件新建</h1><h2 id="1-1-Front-matter"><a href="#1-1-Front-matter" class="headerlink" title="1.1 Front-matter"></a>1.1 Front-matter</h2><p>Front-matter 是文件最上方以 <code>---</code> 分隔的区域，用于指定个别文件的变量，举例来说：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">date: 2013/7/13 20:46:25</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>下是预先定义的参数，您可在模板中使用这些参数值并加以利用。</p><table><thead><tr><th align="center">参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">layout</td><td align="center">布局</td></tr><tr><td align="center">title</td><td align="center">标题</td></tr><tr><td align="center">date</td><td align="center">建立日期</td></tr><tr><td align="center">updated</td><td align="center">更新日期</td></tr><tr><td align="center">comments</td><td align="center">开启文章的评论功能</td></tr><tr><td align="center">tags</td><td align="center">标签（不适用于分页）</td></tr><tr><td align="center">categories</td><td align="center">分类（不适用于分页）</td></tr><tr><td align="center">permalink</td><td align="center">覆盖文章网址</td></tr></tbody></table><p>其中，分类和标签需要区别一下，分类具有顺序性和层次性，也就是说 <code>Foo, Bar</code> 不等于 <code>Bar, Foo</code>；而标签没有顺序和层次。</p><h2 id="1-2-layout（布局）"><a href="#1-2-layout（布局）" class="headerlink" title="1.2 layout（布局）"></a>1.2 layout（布局）</h2><p>当你每一次使用代码</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new paper</span><br></pre></td></tr></table></figure><p>它其实默认使用的是<code>post</code>这个布局，也就是在<code>source</code>文件夹下的<code>_post</code>里面。</p><p>Hexo 有三种默认布局：<code>post</code>、<code>page</code> 和 <code>draft</code>，它们分别对应不同的路径，而您自定义的其他布局和 <code>post</code> 相同，都将储存到 <code>source/_posts</code> 文件夹。</p><table><thead><tr><th align="center">布局</th><th align="center">路径</th></tr></thead><tbody><tr><td align="center">post</td><td align="center">source/_posts</td></tr><tr><td align="center">page</td><td align="center">source</td></tr><tr><td align="center">draft</td><td align="center">source/_drafts</td></tr></tbody></table><p>而new这个命令其实是：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>只不过这个layout默认是post罢了。</p><h2 id="1-3-page"><a href="#1-3-page" class="headerlink" title="1.3 page"></a>1.3 page</h2><p>如果你想另起一页，那么可以使用</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page board</span><br></pre></td></tr></table></figure><p>系统会自动给你在source文件夹下创建一个board文件夹，以及board文件夹中的index.md，这样你访问的board对应的链接就是<code>http://xxx.xxx/board</code></p><h2 id="1-4-draft"><a href="#1-4-draft" class="headerlink" title="1.4 draft"></a>1.4 draft</h2><p>draft是草稿的意思，也就是你如果想写文章，又不希望被看到，那么可以</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new draft newpage</span><br></pre></td></tr></table></figure><p>这样会在source/_draft中新建一个newpage.md文件，如果你的草稿文件写的过程中，想要预览一下，那么可以使用</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server --draft</span><br></pre></td></tr></table></figure><p>在本地端口中开启服务预览。</p><p>如果你的草稿文件写完了，想要发表到post中，</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo publish draft newpage</span><br></pre></td></tr></table></figure><p>就会自动把newpage.md发送到post中。</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo配置优化</title>
      <link href="/%E5%8D%9A%E5%AE%A2/2020-04-28-Hexo%E9%85%8D%E7%BD%AE%E4%BC%98%E5%8C%96.html"/>
      <url>/%E5%8D%9A%E5%AE%A2/2020-04-28-Hexo%E9%85%8D%E7%BD%AE%E4%BC%98%E5%8C%96.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-hexo基本配置"><a href="#1-hexo基本配置" class="headerlink" title="1. hexo基本配置"></a>1. hexo基本配置</h1><p>在文件根目录下的<code>_config.yml</code>，就是整个hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考<a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">官方的配置</a>描述。</p><h2 id="1-1-网站"><a href="#1-1-网站" class="headerlink" title="1.1 网站"></a>1.1 网站</h2><table><thead><tr><th align="center">参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center"><code>title</code></td><td align="center">网站标题</td></tr><tr><td align="center"><code>subtitle</code></td><td align="center">网站副标题</td></tr><tr><td align="center"><code>description</code></td><td align="center">网站描述</td></tr><tr><td align="center"><code>author</code></td><td align="center">您的名字</td></tr><tr><td align="center"><code>language</code></td><td align="center">网站使用的语言</td></tr><tr><td align="center"><code>timezone</code></td><td align="center">网站时区。Hexo 默认使用您电脑的时区。<a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones" target="_blank" rel="noopener">时区列表</a>。比如说：<code>America/New_York</code>, <code>Japan</code>, 和 <code>UTC</code> 。</td></tr></tbody></table><p>其中，<code>description</code>主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。<code>author</code>参数用于主题显示文章的作者。</p><h2 id="1-2-网址"><a href="#1-2-网址" class="headerlink" title="1.2 网址"></a>1.2 网址</h2><table><thead><tr><th align="center">参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center"><code>url</code></td><td align="center">网址</td></tr><tr><td align="center"><code>root</code></td><td align="center">网站根目录</td></tr><tr><td align="center"><code>permalink</code></td><td align="center">文章的 <a href="https://hexo.io/zh-cn/docs/permalinks" target="_blank" rel="noopener">永久链接</a> 格式</td></tr><tr><td align="center"><code>permalink_defaults</code></td><td align="center">永久链接中各部分的默认值</td></tr></tbody></table><p>在这里，你需要把url改成你的网站域名。</p><p>permalink，也就是你生成某个文章时的那个链接格式。</p><p>比如我新建一个文章叫temp.md，那么这个时候他自动生成的地址就是<a href="http://yoursite.com/2018/09/05/temp。" target="_blank" rel="noopener">http://yoursite.com/2018/09/05/temp。</a></p><p>以下是官方给出的示例，关于链接的变量还有很多，需要的可以去官网上查找<a href="https://hexo.io/zh-cn/docs/permalinks" target="_blank" rel="noopener">永久链接 </a>。</p><table><thead><tr><th align="center">参数</th><th align="center">结果</th></tr></thead><tbody><tr><td align="center"><code>:year/:month/:day/:title/</code></td><td align="center">2013/07/14/hello-world</td></tr><tr><td align="center"><code>:year-:month-:day-:title.html</code></td><td align="center">2013-07-14-hello-world.html</td></tr><tr><td align="center"><code>:category/:title</code></td><td align="center">foo/bar/hello-world</td></tr></tbody></table><h2 id="1-3-其他"><a href="#1-3-其他" class="headerlink" title="1.3 其他"></a>1.3 其他</h2><p>再往下翻，中间这些都默认就好了。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">landscape</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">&lt;repository</span> <span class="string">url&gt;</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">[branch]</span></span><br></pre></td></tr></table></figure><p>theme就是选择什么主题，也就是在theme这个文件夹下，在官网上有很多个主题，默认给你安装的是lanscape这个主题。当你需要更换主题时，在官网上下载，把主题的文件放在theme文件夹下，再修改这个参数就可以了。</p><p>接下来这个deploy就是网站的部署的，repo就是仓库(Repository)的简写。branch选择仓库的哪个分支。这个在<a href="../Hexo搭建个人博客">之前进行github</a>的时候已经修改过了，不再赘述。而这个在后面进行双平台部署的时候会再次用到。</p><h1 id="2-主题更换"><a href="#2-主题更换" class="headerlink" title="2. 主题更换"></a>2. 主题更换</h1><p>如果你觉得默认的<code>landscape</code>主题不好看，那么可以在官网的主题中，选择你喜欢的一个主题进行修改就可以啦。<a href="https://hexo.io/themes/" target="_blank" rel="noopener">点这里</a></p><p><img src="http://cdn.foreversfj.com/image/blog/20200428/n9PtptfIevaL.png!share" alt=""></p><p>这里有200多个主题可以选。不过最受欢迎的就是那么几个，比如<a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">NexT主题</a>，非常的简洁好看，大多数人都选择这个，关于这个的教程也比较多。不过我选择的是[<a href="https://github.com/tufu9441/maupassant-hexo" target="_blank" rel="noopener">maupassant</a>这个主题，由<a href="https://github.com/pagecho/" target="_blank" rel="noopener">Cho</a>大神为<a href="http://typecho.org/" target="_blank" rel="noopener">Typecho</a>平台设计开发的一套响应式模板，体积只有20KB，在各种尺寸的设备上表现出色。由于其简洁大气的风格受到许多用户喜爱，目前也已经被移植到了多个平台上，<a href="https://www.haomwei.com/technology/maupassant-hexo.html" target="_blank" rel="noopener">展示效果</a>.</p><p>具体的主题使用方法及配置<a href="转-大道至简——Hexo简洁主题推荐/">详见</a>。</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搭建个人博客</title>
      <link href="/%E5%8D%9A%E5%AE%A2/2020-04-28-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.html"/>
      <url>/%E5%8D%9A%E5%AE%A2/2020-04-28-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-Hexo简介"><a href="#1-Hexo简介" class="headerlink" title="1. Hexo简介"></a>1. Hexo简介</h1><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。大家可以进入<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo官网</a>进行详细查看，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</p><h1 id="2-Hexo搭建步骤"><a href="#2-Hexo搭建步骤" class="headerlink" title="2. Hexo搭建步骤"></a>2. Hexo搭建步骤</h1><ol><li>安装Git</li><li>安装Node.js</li><li>安装Hexo</li><li>GitHub创建个人仓库</li><li>生成SSH添加到GitHub</li><li>将hexo部署到GitHub</li><li>设置个人域名</li><li>发布文章</li></ol><h2 id="2-1-安装Git"><a href="#2-1-安装Git" class="headerlink" title="2.1 安装Git"></a>2.1 安装Git</h2><p>Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。也就是用来管理你的hexo博客文章，上传到GitHub的工具。Git非常强大，我觉得建议每个人都去了解一下。廖雪峰老师的Git教程写的非常好，大家可以了解一下。<a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener">Git教程</a></p><p>windows：到git官网上下载，<a href="https://gitforwindows.org/" target="_blank" rel="noopener">Download git</a>，下载后会有一个Git Bash的命令行工具，以后就用这个工具来使用git。</p><p>linux：对linux来说实在是太简单了，因为最早的git就是在linux上编写的，只需要一行代码</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure><p>安装好后，用<code>git --version</code> 来查看一下版本</p><h2 id="2-2-安装node-js"><a href="#2-2-安装node-js" class="headerlink" title="2.2 安装node.js"></a>2.2 安装node.js</h2><p>Hexo是基于nodeJS编写的，所以需要安装一下nodeJs和里面的npm工具。</p><p>windows：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">nodejs</a>选择LTS版本就行了。</p><p>linux：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure><p>安装完后，打开命令行:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>检查一下有没有安装成功</p><p>顺便说一下，windows在git安装完后，就可以直接使用git bash来敲命令行了，不用自带的cmd，cmd有点难用。</p><h2 id="2-3-安装hexo"><a href="#2-3-安装hexo" class="headerlink" title="2.3 安装hexo"></a>2.3 安装hexo</h2><p>前面git和nodejs安装好后，就可以安装hexo了，你可以先创建一个文件夹blog，然后<code>cd</code>到这个文件夹下（或者在这个文件夹下直接右键git bash打开）。</p><p>输入命令:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>依旧用<code>hexo -v</code>查看一下版本</p><p>至此就全部安装完了。</p><p>接下来初始化一下hexo</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init myblog</span><br></pre></td></tr></table></figure><p>这个myblog可以自己取什么名字都行，然后:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> myblog //进入这个myblog文件夹</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>新建完成后，指定文件夹目录下有：</p><ul><li>node_modules: 依赖包</li><li>public：存放生成的页面</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：主题</li><li><strong>_config.yml: 博客的配置文件</strong></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>打开hexo的服务，在浏览器输入localhost:4000就可以看到你生成的博客了。</p><p>大概长这样：</p><p><img src="http://cdn.foreversfj.com/image/blog/20200428/Y5g1yKqW3nAx.png!share" alt=""></p><p>使用<code>ctrl+c</code>可以把服务关掉。</p><h1 id="3-使用GitHub保存"><a href="#3-使用GitHub保存" class="headerlink" title="3. 使用GitHub保存"></a>3. 使用GitHub保存</h1><h2 id="3-1-新建GitHub仓库"><a href="#3-1-新建GitHub仓库" class="headerlink" title="3.1 新建GitHub仓库"></a>3.1 新建GitHub仓库</h2><p>创建一个用于保存网站代码的仓库，便于本地与云服务器之间数据互传。主要是本地上传到服务器时，文件太多会导致用时过长，不方便。使用GitHub作中转仓库较为方便。</p><h2 id="3-2-生成SSH添加到GitHub对应仓库"><a href="#3-2-生成SSH添加到GitHub对应仓库" class="headerlink" title="3.2 生成SSH添加到GitHub对应仓库"></a>3.2 生成SSH添加到GitHub对应仓库</h2><p>回到你的git bash中，</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"yourname"</span></span><br><span class="line">git config --global user.email <span class="string">"youremail"</span></span><br></pre></td></tr></table></figure><p>这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。</p><p>可以用以下两条，检查一下你有没有输对</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure><p>然后创建SSH，一路回车</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"youremail"</span></span><br></pre></td></tr></table></figure><p>这个时候它会告诉你已经生成了.ssh的文件夹。在你的电脑中找到这个文件夹。</p><p><img src="http://cdn.foreversfj.com/image/blog/20200428/FUA4xrMHLpOn.png!share" alt=""></p><p>ssh，简单来讲，就是一个秘钥，其中，id_rsa是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。</p><p>而后在GitHub的setting中，找到SSH keys的设置选项，点击<code>New SSH key</code>，把你的<code>id_rsa.pub</code>里面的信息复制进去。</p><p>在gitbash中，查看是否成功</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><h2 id="3-3-将hexo发送到GitHub"><a href="#3-3-将hexo发送到GitHub" class="headerlink" title="3.3 将hexo发送到GitHub"></a>3.3 将hexo发送到GitHub</h2><p>这一步，我们就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，打开站点配置文件 <code>_config.yml</code>，翻到最后，修改为：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">'git'</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">YourGithubAddress</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>repo就是你的GitHub的仓库的git地址，可在GitHub中查看</p><p>这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>其中 <code>hexo clean</code>清除了你之前生成的东西，也可以不加。<code>hexo generate</code> 顾名思义，生成静态文章，可以用 <code>hexo g</code>缩写，<code>hexo deploy</code> 部署文章，可以用<code>hexo d</code>缩写</p><p>注意deploy时可能要你输入username和password。</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx优化配置</title>
      <link href="/Linux/2020-04-27-Nginx%E4%BC%98%E5%8C%96%E9%85%8D%E7%BD%AE.html"/>
      <url>/Linux/2020-04-27-Nginx%E4%BC%98%E5%8C%96%E9%85%8D%E7%BD%AE.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-Nginx优化配置"><a href="#1-Nginx优化配置" class="headerlink" title="1 Nginx优化配置"></a>1 Nginx优化配置</h1><h2 id="1-2-HttpGzip模块配置"><a href="#1-2-HttpGzip模块配置" class="headerlink" title="1.2 HttpGzip模块配置"></a>1.2 HttpGzip模块配置</h2><p>下面配置Nginx的HttpGzip模块。这个模块支持在线实时压缩输出数据流。</p><p>看是否安装了HttpGzip模块：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@foreverSFJ ~]# nginx -V</span><br><span class="line">nginx version: nginx/1.16.1</span><br><span class="line">built by gcc 8.3.1 20190507 (Red Hat 8.3.1-4) (GCC) </span><br><span class="line">configure arguments:</span><br></pre></td></tr></table></figure><p>配置代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">gzip on;</span><br><span class="line">gzip_min_length <span class="number">1</span>k;</span><br><span class="line">gzip_buffers <span class="number">4</span> <span class="number">16</span>k;</span><br><span class="line">gzip_http_version <span class="number">1.1</span>;</span><br><span class="line">gzip_comp_level <span class="number">2</span>;</span><br><span class="line">gzip_types <span class="built_in">text</span>/plain application/x-javascript <span class="built_in">text</span>/css application/xml;</span><br><span class="line">gzip_vary on;</span><br></pre></td></tr></table></figure><ul><li>gzip用于设置开启或者关闭gzip模块，“gzip on”表示开启GZIP压缩，实时压缩输出数据流；</li><li>gzip_min_length设置允许压缩的页面最小字节数，页面字节数从header头的Content-Length中获取。默认值是0，不管页面多大都进行压缩。建议设置成大于1K的字节数，小于1K可能会越压越大；</li><li>gzip_buffers表示申请4个单位为16K的内存作为压缩结果流缓存，默认值是申请与原始数据大小相同的内存空间来存储gzip压缩结果；</li><li>gzip_http_version用于设置识别HTTP协议版本，默认是1.1，目前大部分浏览器已经支持GZIP解压，使用默认即可；</li><li>gzip_comp_level用来指定GZIP压缩比，1 压缩比最小，处理速度最快；9 压缩比最大，传输速度快，但处理最慢，也比较消耗cpu资源；</li><li>gzip_types用来指定压缩的类型，无论是否指定，“text/html”类型总是会被压缩的；</li><li>gzip_vary选项可以让前端的缓存服务器缓存经过GZIP压缩的页面，例如用Squid缓存经过Nginx压缩的数据。</li></ul><h2 id="1-2-负载均衡配置"><a href="#1-2-负载均衡配置" class="headerlink" title="1.2 负载均衡配置"></a>1.2 负载均衡配置</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">upstream cszhi.com&#123;</span><br><span class="line">    ip_hash;</span><br><span class="line">    server <span class="number">192.168</span><span class="number">.8</span><span class="number">.11</span>:<span class="number">80</span>;</span><br><span class="line">    server <span class="number">192.168</span><span class="number">.8</span><span class="number">.12</span>:<span class="number">80</span> down;</span><br><span class="line">    server <span class="number">192.168</span><span class="number">.8</span><span class="number">.13</span>:<span class="number">8009</span> max_fails=<span class="number">3</span> fail_timeout=<span class="number">20</span>s;</span><br><span class="line">    server <span class="number">192.168</span><span class="number">.8</span><span class="number">.146</span>:<span class="number">8080</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>upstream是Nginx的HTTP Upstream模块，这个模块通过一个简单的调度算法来实现客户端IP到后端服务器的负载均衡。</p><p>在上面的设定中，通过upstream指令指定了一个负载均衡器的名称cszhi.com。这个名称可以任意指定，在后面需要的地方直接调用即可。</p><p>Nginx的负载均衡模块目前支持4种调度算法，下面进行分别介绍，其中后两项属于第三方的调度方法。</p><ul><li>轮询（默认）：每个请求按时间顺序逐一分配到不同的后端服务器，如果后端某台服务器宕机，故障系统被自动剔除，使用户访问不受影响；</li><li>Weight：指定轮询权值，Weight值越大，分配到的访问机率越高，主要用于后端每个服务器性能不均的情况下；</li><li>ip_hash：每个请求按访问IP的hash结果分配，这样来自同一个IP的访客固定访问一个后端服务器，有效解决了动态网页存在的session共享问题；</li><li>fair：比上面两个更加智能的负载均衡算法。此种算法可以依据页面大小和加载时间长短智能地进行负载均衡，也就是根据后端服务器的响应时间来分配请求，响应时间短的优先分配。Nginx本身是不支持fair的，如果需要使用这种调度算法，必须下载Nginx的upstream_fair模块；</li><li>url_hash：按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，可以进一步提高后端缓存服务器的效率。Nginx本身是不支持url_hash的，如果需要使用这种调度算法，必须安装Nginx 的hash软件包。</li></ul><p>在HTTP Upstream模块中，可以通过server指令指定后端服务器的IP地址和端口，同时还可以设定每个后端服务器在负载均衡调度中的状态。常用的状态有：</p><ul><li>down：表示当前的server暂时不参与负载均衡；</li><li>backup：预留的备份机器。当其他所有的非backup机器出现故障或者忙的时候，才会请求backup机器，因此这台机器的压力最轻；</li><li>max_fails：允许请求失败的次数，默认为1。当超过最大次数时，返回proxy_next_upstream 模块定义的错误；</li><li>fail_timeout：在经历了max_fails次失败后，暂停服务的时间。max_fails可以和fail_timeout一起使用。</li></ul><p>注意，当负载调度算法为ip_hash时，后端服务器在负载均衡调度中的状态不能是weight和backup。</p><h2 id="1-3-StubStatus模块配置"><a href="#1-3-StubStatus模块配置" class="headerlink" title="1.3 StubStatus模块配置"></a>1.3 StubStatus模块配置</h2><p>StubStatus模块能够获取Nginx自上次启动以来的工作状态，此模块非核心模块，需要在Nginx编译安装时手工指定才能使用此功能。</p><p>以下指令实指定启用获取Nginx工作状态的功能。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">location /NginxStatus &#123;</span><br><span class="line">    stub_status on;</span><br><span class="line">    access_log logs/NginxStatus.<span class="built_in">log</span>;</span><br><span class="line">    auth_basic <span class="string">"NginxStatus"</span>;</span><br><span class="line">    auth_basic_user_file ../htpasswd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>stub_status设置为“on”表示启用StubStatus的工作状态统计功能。access_log 用来指定StubStatus模块的访问日志文件。auth_basic是Nginx的一种认证机制。auth_basic_user_file用来指定认证的密码文件，由于Nginx的auth_basic认证采用的是与Apache兼容的密码文件，因此需要用Apache的htpasswd命令来生成密码文件，例如要添加一个test用户，可以使用下面方式生成密码文件：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/apache/bin/htpasswd -c  /opt/nginx/conf/htpasswd test</span><br></pre></td></tr></table></figure><p>然后输入两次密码后确认之后添加用户成功。</p><p>要查看Nginx的运行状态，可以输入<code>http://ip/NginxStatus</code>，输入创建的用户名和密码就可以看到Nginx的运行状态：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Active connections: <span class="number">1</span></span><br><span class="line">server accepts handled requests</span><br><span class="line"><span class="number">34561</span> <span class="number">35731</span> <span class="number">354399</span></span><br><span class="line">Reading: <span class="number">0</span> Writing: <span class="number">3</span> Waiting: <span class="number">0</span></span><br></pre></td></tr></table></figure><p>Active connections表示当前活跃的连接数，第三行的三个数字表示 Nginx当前总共处理了34561个连接，成功创建次握手， 总共处理了354399个请求。最后一行的Reading表示Nginx读取到客户端Header信息数，Writing表示Nginx返回给客户端的Header信息数，“Waiting”表示Nginx已经处理完，正在等候下一次请求指令时的驻留连接数。</p><p>在最后这段设置中，设置了虚拟主机的错误信息返回页面，通过error_page指令可以定制各种错误信息的返回页面。在默认情况下，Nginx会在主目录的html目录中查找指定的返回页面，特别需要注意的是，这些错误信息的返回页面大小一定要超过512K，否者会被ie浏览器替换为ie默认的错误页面。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">error_page <span class="number">404</span> /<span class="number">404.</span>html;</span><br><span class="line">error_page <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> /<span class="number">50</span>x.html;</span><br><span class="line">location = /<span class="number">50</span>x.html &#123;</span><br><span class="line">    root html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx入门配置</title>
      <link href="/Linux/2020-04-27-Nginx%E5%85%A5%E9%97%A8%E9%85%8D%E7%BD%AE.html"/>
      <url>/Linux/2020-04-27-Nginx%E5%85%A5%E9%97%A8%E9%85%8D%E7%BD%AE.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-安装Nginx"><a href="#1-安装Nginx" class="headerlink" title="1. 安装Nginx"></a>1. 安装Nginx</h1><p>在Linux系统中安装Nginx，详见<a href="">全新Linux使用入口</a>中的Nginx安装</p><h1 id="2-基础配置"><a href="#2-基础配置" class="headerlink" title="2. 基础配置"></a>2. 基础配置</h1><p>Nginx的配置文件<code>nginx.conf</code>位于其安装目录的conf目录下。</p><p><code>nginx.conf</code>由多个块组成，最外面的块是main，main包含Events和HTTP，HTTP包含upstream和多个Server，Server又包含多个location：</p><p><img src="//cdn.foreversfj.com/image/blog/20200427/dLSI2aMC1nGA.png!share" alt=""></p><p>main（全局设置）、server（主机设置）、upstream（负载均衡服务器设置）和 location（URL匹配特定位置的设置）。</p><ul><li>main块设置的指令将影响其他所有设置；</li><li>server块的指令主要用于指定主机和端口；</li><li>upstream指令主要用于负载均衡，设置一系列的后端服务器；</li><li>location块用于匹配网页位置。</li></ul><h2 id="2-1-Nginx的全局配置"><a href="#2-1-Nginx的全局配置" class="headerlink" title="2.1 Nginx的全局配置"></a>2.1 Nginx的全局配置</h2><p>代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">worker_processes <span class="number">1</span>;</span><br><span class="line">error_log logs/error.<span class="built_in">log</span> notice;</span><br><span class="line">pid logs/nginx.pid;</span><br><span class="line"></span><br><span class="line">events&#123;</span><br><span class="line">    use epoll;</span><br><span class="line">    worker_connections <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>每个配置选项的含义解释如下：</p><ul><li><p>worker_processes是个主模块指令，指定了Nginx要开启的进程数。每个Nginx进程平均耗费10M~12M内存。建议指定和CPU的数量一致即可。</p></li><li><p>error_log是个主模块指令，用来定义全局错误日志文件。日志输出级别有debug、info、notice、warn、error、crit可供选择，其中，debug输出日志最为最详细，而crit输出日志最少。</p></li><li><p>pid是个主模块指令，用来指定进程pid的存储文件位置。</p></li><li><p>events事件指令是设定Nginx的工作模式及连接数上限：</p><blockquote><p>use是个事件模块指令，用来指定Nginx的工作模式。Nginx支持的工作模式有select、poll、kqueue、epoll、rtsig和/dev/poll。其中select和poll都是标准的工作模式，kqueue和epoll是高效的工作模式，不同的是epoll用在Linux平台上，而kqueue用在BSD系统中。对于Linux系统，epoll工作模式是首选。</p><p>worker_connections用于定义Nginx每个进程的最大连接数，默认是1024。</p></blockquote></li></ul><h2 id="2-2-HTTP服务器配置"><a href="#2-2-HTTP服务器配置" class="headerlink" title="2.2 HTTP服务器配置"></a>2.2 HTTP服务器配置</h2><p>Nginx对HTTP服务器相关属性的配置代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">http&#123;</span><br><span class="line">    include    mime.types;</span><br><span class="line">    default_type application/octet-stream;</span><br><span class="line">    log_format main '$remote_addr - $remote_user [$time_local] '</span><br><span class="line">        '"$request" $status $bytes_sent '</span><br><span class="line">        '"$http_referer" "$http_user_agent" '</span><br><span class="line">        '"$gzip_ratio"';</span><br><span class="line">    access_log     /var/local/webLogs/nginx/nginx-access.<span class="built_in">log</span>;</span><br><span class="line">    error_log      /var/local/webLogs/nginx/nginx-error.<span class="built_in">log</span>     error;</span><br><span class="line">    client_max_body_size <span class="number">20</span>m;</span><br><span class="line">    client_header_buffer_size <span class="number">32</span>K;</span><br><span class="line">    large_client_header_buffers <span class="number">4</span> <span class="number">128</span>k;</span><br><span class="line">    Sendfile on;</span><br><span class="line">    tcp_nopush on;</span><br><span class="line">    tcp_nodelay on;</span><br><span class="line">    keepalive_timeout <span class="number">60</span>;</span><br><span class="line">    client_header_timeout <span class="number">10</span>;</span><br><span class="line">    client_body_timeout <span class="number">10</span>;</span><br><span class="line">    send_timeout <span class="number">10</span>;</span><br><span class="line">    gzip  on;</span><br><span class="line">    </span><br><span class="line">    include    servers.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面详细介绍下这段代码中每个配置选项的含义:</p><ul><li><p><strong>include</strong>是个主模块指令，实现对配置文件所包含的文件的设定，可以减少主配置文件的复杂度。类似于Apache中的include方法。</p></li><li><p><strong>default_type</strong>属于HTTP核心模块指令，这里设定默认类型为二进制流，也就是当文件类型未定义时使用这种方式，例如在没有配置PHP环境时，Nginx是不予解析的，此时，用浏览器访问PHP文件就会出现下载窗口。</p></li><li><p><strong>log_format</strong>是Nginx的HttpLog模块指令，用于指定Nginx日志的输出格式。</p><ul><li><strong>main</strong>为此日志输出格式的名称，可以在下面的access_log指令中引用。</li></ul></li><li><p><strong>access_log</strong>和<strong>error_log</strong>是日志保存地址</p></li><li><p><strong>client_max_body_size</strong>用来设置允许客户端请求的最大的单个文件字节数；</p></li><li><p><strong>client_header_buffer_size</strong>用于指定来自客户端请求头的headerbuffer大小。对于大多数请求，1K的缓冲区大小已经足够，如果自定义了消息头或有更大的Cookie，可以增加缓冲区大小。这里设置为32K；</p></li><li><p><strong>large_client_header_buffers</strong>用来指定客户端请求中较大的消息头的缓存最大数量和大小， “4”为个数，“128K”为大小，最大缓存量为4个128K；</p></li><li><p><strong>sendfile</strong>参数用于开启高效文件传输模式。将<strong>tcp_nopush</strong>和<strong>tcp_nodelay</strong>两个指令设置为on用于防止网络阻塞；</p></li><li><p><strong>keepalive_timeout</strong>设置客户端连接保持活动的超时时间。在超过这个时间之后，服务器会关闭该连接；</p></li><li><p><strong>client_header_timeout</strong>设置客户端请求头读取超时时间。如果超过这个时间，客户端还没有发送任何数据，Nginx将返回“Request time out（408）”错误；</p></li><li><p><strong>client_body_timeout</strong>设置客户端请求主体读取超时时间。如果超过这个时间，客户端还没有发送任何数据，Nginx将返回“Request time out（408）”错误，默认值是60；</p></li><li><p><strong>send_timeout</strong>指定响应客户端的超时时间。这个超时仅限于两个连接活动之间的时间，如果超过这个时间，客户端没有任何活动，Nginx将会关闭连接。</p></li><li><p><strong>gzip</strong>是将日志压缩。</p><ul><li>使用这一项时需要安装HttpGzip模块，可使用<code>nginx -V</code>命令查看是否已安装</li></ul></li></ul><h2 id="2-3-server虚拟主机配置"><a href="#2-3-server虚拟主机配置" class="headerlink" title="2.3 server虚拟主机配置"></a>2.3 server虚拟主机配置</h2><p>建议将对虚拟主机进行配置的内容写进另外一个文件，然后通过include指令包含进来，这样更便于维护和管理。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">    <span class="built_in">listen</span> <span class="number">80</span>;</span><br><span class="line">    server_name <span class="number">192.168</span><span class="number">.8</span><span class="number">.18</span> cszhi.com;</span><br><span class="line">    index index.html index.htm index.php;</span><br><span class="line">    root /wwwroot/www.cszhi.com</span><br><span class="line">        charset gb2312;</span><br><span class="line">    access_log logs/www.ixdba.net.access.<span class="built_in">log</span> main;</span><br></pre></td></tr></table></figure><p>server标志定义虚拟主机开始，listen用于指定虚拟主机的服务端口，server_name用来指定IP地址或者域名，多个域名之间用空格分 开。index用于设定访问的默认首页地址，root指令用于指定虚拟主机的网页根目录，这个目录可以是相对路径，也可以是绝对路径。Charset用于设置网页的默认编码格式。access_log用来指定此虚拟主机的访问日志存放路径，最后的main用于指定访问日志的输出格式。</p><h2 id="2-4-location-URL匹配配置"><a href="#2-4-location-URL匹配配置" class="headerlink" title="2.4 location URL匹配配置"></a>2.4 location URL匹配配置</h2><p>URL地址匹配是进行Nginx配置中最灵活的部分。 location支持正则表达式匹配，也支持条件判断匹配，用户可以通过location指令实现Nginx对动、静态网页进行过滤处理。使用location URL匹配配置还可以实现反向代理，用于实现PHP动态解析或者负载负载均衡。</p><p>以下这段设置是通过location指令来对网页URL进行分析处理，所有扩展名以<code>.gif</code>、<code>.jpg</code>、<code>.jpeg</code>、<code>.png</code>、<code>.bmp</code>、<code>.swf</code>结尾的静态文件都交给nginx处理，而expires用来指定静态文件的过期时间，这里是30天。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$ &#123;</span><br><span class="line">    root /wwwroot/www.cszhi.com;</span><br><span class="line">    expires <span class="number">30</span>d;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下这段设置是将upload和html下的所有文件都交给nginx来处理，当然，upload和html目录包含在<code>/web/wwwroot/www.cszhi.com</code>目录中。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location ~ ^/(upload|html)/ &#123;</span><br><span class="line">    root /web/wwwroot/www.cszhi.com;</span><br><span class="line">    expires <span class="number">30</span>d;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在最后这段设置中，location是对此虚拟主机下动态网页的过滤处理，也就是将所有以.jsp为后缀的文件都交给本机的8080端口处理。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location ~ .*.php$ &#123;</span><br><span class="line">    index index.php;</span><br><span class="line">    proxy_pass http:<span class="comment">//localhost:8080;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat日志配置</title>
      <link href="/Linux/2020-04-27-Tomcat%E6%97%A5%E5%BF%97%E9%85%8D%E7%BD%AE.html"/>
      <url>/Linux/2020-04-27-Tomcat%E6%97%A5%E5%BF%97%E9%85%8D%E7%BD%AE.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-Tomcat日志配置"><a href="#1-Tomcat日志配置" class="headerlink" title="1. Tomcat日志配置"></a>1. Tomcat日志配置</h1><h2 id="1-1-tomcat-日志配置文件"><a href="#1-1-tomcat-日志配置文件" class="headerlink" title="1.1 tomcat 日志配置文件"></a>1.1 tomcat 日志配置文件</h2><p><strong>tomcat 对应日志的配置文件</strong>：tomcat目录下的<code>/conf/logging.properties</code>。</p><p><strong>tomcat 的日志等级有：</strong>日志输出级别：SEVERE (最高级别) &gt; WARNING &gt; INFO &gt; CONFIG &gt; FINE &gt; FINER(精心) &gt; FINEST (所有内容,最低级别)</p><p><strong>tomcat 有五类日志 ：</strong>catalina、localhost、manager、admin、host-manager</p><p><code>/conf/logging.properties</code> 配置文件内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">handlers = 1catalina.org.apache.juli.AsyncFileHandler, 2localhost.org.apache.juli.AsyncFileHandler, 3manager.org.apache.juli.AsyncFileHandler, 4host-manager.org.apache.juli.AsyncFileHandler, java.util.logging.ConsoleHandler</span><br><span class="line"></span><br><span class="line">.handlers = 1catalina.org.apache.juli.AsyncFileHandler, java.util.logging.ConsoleHandler</span><br><span class="line"></span><br><span class="line">1catalina.org.apache.juli.AsyncFileHandler.level = FINE</span><br><span class="line">1catalina.org.apache.juli.AsyncFileHandler.directory = $&#123;catalina.base&#125;/logs</span><br><span class="line">1catalina.org.apache.juli.AsyncFileHandler.prefix = catalina.</span><br><span class="line">1catalina.org.apache.juli.AsyncFileHandler.maxDays = 90</span><br><span class="line"></span><br><span class="line">2localhost.org.apache.juli.AsyncFileHandler.level = FINE</span><br><span class="line">2localhost.org.apache.juli.AsyncFileHandler.directory = $&#123;catalina.base&#125;/logs</span><br><span class="line">2localhost.org.apache.juli.AsyncFileHandler.prefix = localhost.</span><br><span class="line">2localhost.org.apache.juli.AsyncFileHandler.maxDays = 90</span><br><span class="line"></span><br><span class="line">3manager.org.apache.juli.AsyncFileHandler.level = FINE</span><br><span class="line">3manager.org.apache.juli.AsyncFileHandler.directory = $&#123;catalina.base&#125;/logs</span><br><span class="line">3manager.org.apache.juli.AsyncFileHandler.prefix = manager.</span><br><span class="line">3manager.org.apache.juli.AsyncFileHandler.maxDays = 90</span><br><span class="line"></span><br><span class="line">4host-manager.org.apache.juli.AsyncFileHandler.level = FINE</span><br><span class="line">4host-manager.org.apache.juli.AsyncFileHandler.directory = $&#123;catalina.base&#125;/logs</span><br><span class="line">4host-manager.org.apache.juli.AsyncFileHandler.prefix = host-manager.</span><br><span class="line">4host-manager.org.apache.juli.AsyncFileHandler.maxDays = 90</span><br><span class="line"></span><br><span class="line">java.util.logging.ConsoleHandler.level = FINE</span><br><span class="line">java.util.logging.ConsoleHandler.formatter = org.apache.juli.OneLineFormatter</span><br><span class="line"></span><br><span class="line">org.apache.catalina.core.ContainerBase.[Catalina].[localhost].level = INFO</span><br><span class="line">org.apache.catalina.core.ContainerBase.[Catalina].[localhost].handlers = 2localhost.org.apache.juli.AsyncFileHandler</span><br><span class="line"></span><br><span class="line">org.apache.catalina.core.ContainerBase.[Catalina].[localhost].[/manager].level = INFO</span><br><span class="line">org.apache.catalina.core.ContainerBase.[Catalina].[localhost].[/manager].handlers = 3manager.org.apache.juli.AsyncFileHandler</span><br><span class="line"></span><br><span class="line">org.apache.catalina.core.ContainerBase.[Catalina].[localhost].[/host-manager].level = INFO</span><br><span class="line">org.apache.catalina.core.ContainerBase.[Catalina].[localhost].[/host-manager].handlers = 4host-manager.org.apache.juli.AsyncFileHandler</span><br><span class="line"></span><br><span class="line"># For example, set the org.apache.catalina.util.LifecycleBase logger to log</span><br><span class="line"># each component that extends LifecycleBase changing state:</span><br><span class="line">#org.apache.catalina.util.LifecycleBase.level = FINE</span><br><span class="line"></span><br><span class="line"># To see debug messages in TldLocationsCache, uncomment the following line:</span><br><span class="line">#org.apache.jasper.compiler.TldLocationsCache.level = FINE</span><br><span class="line"></span><br><span class="line"># To see debug messages for HTTP/2 handling, uncomment the following line:</span><br><span class="line">#org.apache.coyote.http2.level = FINE</span><br><span class="line"></span><br><span class="line"># To see debug messages for WebSocket handling, uncomment the following line:</span><br><span class="line">#org.apache.tomcat.websocket.level = FINE</span><br></pre></td></tr></table></figure><h2 id="1-2-tomcat-日志文件详解"><a href="#1-2-tomcat-日志文件详解" class="headerlink" title="1.2 tomcat 日志文件详解"></a>1.2 tomcat 日志文件详解</h2><h3 id="1-2-1-catalina-out"><a href="#1-2-1-catalina-out" class="headerlink" title="1.2.1 catalina.out"></a>1.2.1 catalina.out</h3><p><code>catalina.out</code>即标准输出和标准出错，所有输出到这两个位置的都会进入catalina.out，这里包含tomcat运行自己输出的日志以及应用里向console输出的日志。默认这个日志文件是不会进行自动切割的，我们需要借助其他工具进行切割（注意：<code>catalina.out</code>文件如果过大会影响）</p><h3 id="1-2-2-catalina-YYYY-MM-DD-log"><a href="#1-2-2-catalina-YYYY-MM-DD-log" class="headerlink" title="1.2.2 catalina.YYYY-MM-DD.log"></a>1.2.2 catalina.YYYY-MM-DD.log</h3><p><code>catalina.{yyyy-MM-dd}.log</code>是tomcat自己运行的一些日志，这些日志还会输出到<code>catalina.out</code>，但是应用向console输出的日志不会输出到<code>catalina.{yyyy-MM-dd}.log</code>，它是tomcat的启动和暂停时的运行日志，<strong>注意，它和catalina.out是里面的内容是不一样的。</strong></p><h2 id="1-3-tomcat-日志文件切割"><a href="#1-3-tomcat-日志文件切割" class="headerlink" title="1.3 tomcat 日志文件切割"></a>1.3 tomcat 日志文件切割</h2><p>tomcat 的 catalina.out 文件tomcat 是不会进行日志切割的，当这个文件大于2G 时，会影响tomcat的运行。那么我们需要对这个文件进行日志切割，切割的方法有很多种</p><h3 id="1-3-1-cronolog切割"><a href="#1-3-1-cronolog切割" class="headerlink" title="1.3.1 cronolog切割"></a>1.3.1 cronolog切割</h3><p>Linux 日志切割工具cronolog详解：<a href="http://blog.csdn.net/chenkeqin_2012/article/details/52670887" target="_blank" rel="noopener">https://blog.csdn.net/chenkeqin_2012/article/details/52670887</a></p><ul><li><p><strong>编译安装cronolog</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget http:<span class="comment">//cronolog.org/download/cronolog-1.6.2.tar.gz </span></span><br><span class="line">tar zxvf cronolog<span class="number">-1.6</span><span class="number">.2</span>.tar.gz </span><br><span class="line">cd cronolog<span class="number">-1.6</span><span class="number">.2</span></span><br><span class="line">./configure </span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure></li><li><p><strong>查看cronolog安装后所在目录（验证安装是否成功）</strong> </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">which cronolog</span><br><span class="line"><span class="comment">// 一般情况下显示为：/usr/local/sbin/cronolog</span></span><br></pre></td></tr></table></figure></li><li><p><strong>编辑tomcat目录bin下的catalina.sh文件</strong></p><p>找到下面这行，类似这样的行有2处：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">org.apache.catalina.startup.Bootstrap <span class="string">"$@"</span> start \</span><br><span class="line">      &gt;&gt; <span class="string">"$CATALINA_OUT"</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br></pre></td></tr></table></figure><ol><li>　　第一处：tomcat是带“-security”参数的启动，</li><li>　　第二处：默认tomcat启动方式，也就是else下面的那部分，我们只修改这里。</li><li>　　另外还要把touch “$CATALINA_OUT”这行注释掉。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#  touch <span class="meta-string">"$CATALINA_OUT"</span></span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"$1"</span> = <span class="string">"-security"</span> ] ; then</span><br><span class="line">    <span class="keyword">if</span> [ $have_tty -eq <span class="number">1</span> ]; then</span><br><span class="line">        echo <span class="string">"Using Security Manager"</span></span><br><span class="line">        fi</span><br><span class="line">        shift</span><br><span class="line">        <span class="string">"$_RUNJAVA"</span> <span class="string">"$LOGGING_CONFIG"</span> $LOGGING_MANAGER $JAVA_OPTS $CATALINA_OPTS \</span><br><span class="line">        -Djava.endorsed.dirs=<span class="string">"$JAVA_ENDORSED_DIRS"</span> -classpath <span class="string">"$CLASSPATH"</span> \</span><br><span class="line">        -Djava.security.manager \</span><br><span class="line">        -Djava.security.policy==<span class="string">"$CATALINA_BASE"</span>/conf/catalina.policy \</span><br><span class="line">        -Dcatalina.base=<span class="string">"$CATALINA_BASE"</span> \</span><br><span class="line">        -Dcatalina.<span class="built_in">home</span>=<span class="string">"$CATALINA_HOME"</span> \</span><br><span class="line">        -Djava.io.tmpdir=<span class="string">"$CATALINA_TMPDIR"</span> \</span><br><span class="line">        org.apache.catalina.startup.Bootstrap <span class="string">"$@"</span> start \</span><br><span class="line">        &gt;&gt; <span class="string">"$CATALINA_OUT"</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="string">"$_RUNJAVA"</span> <span class="string">"$LOGGING_CONFIG"</span> $LOGGING_MANAGER $JAVA_OPTS $CATALINA_OPTS \</span><br><span class="line">            -Djava.endorsed.dirs=<span class="string">"$JAVA_ENDORSED_DIRS"</span> -classpath <span class="string">"$CLASSPATH"</span> \</span><br><span class="line">            -Dcatalina.base=<span class="string">"$CATALINA_BASE"</span> \</span><br><span class="line">            -Dcatalina.<span class="built_in">home</span>=<span class="string">"$CATALINA_HOME"</span> \</span><br><span class="line">            -Djava.io.tmpdir=<span class="string">"$CATALINA_TMPDIR"</span> \</span><br><span class="line">            org.apache.catalina.startup.Bootstrap <span class="string">"$@"</span> start <span class="number">2</span>&gt;&amp;<span class="number">1</span> | /usr/local/sbin/cronolog /usr/local/tomcat/logs/catalina.%Y%m%d.out &gt;&gt; /dev/null &amp;</span><br><span class="line">            #      &gt;&gt; <span class="string">"$CATALINA_OUT"</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br><span class="line"></span><br><span class="line">            fi</span><br></pre></td></tr></table></figure></li><li><p><strong>重启tomcat</strong></p></li></ul><p>查看日志目录是否生成<code>catalina.yymmdd.out</code>的日志文件</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-rw-r--r-- <span class="number">1</span> root root <span class="number">10537</span> Jul <span class="number">30</span> <span class="number">10</span>:<span class="number">50</span> catalina<span class="number">.20140730</span>.out</span><br></pre></td></tr></table></figure><p>配置cronolog完成了，观察每天是否有一个新的catalina.yymmdd.out的日志文件生成，定期删除日期较旧的日志文件。</p><h3 id="1-3-2-log4j切割"><a href="#1-3-2-log4j切割" class="headerlink" title="1.3.2 log4j切割"></a>1.3.2 log4j切割</h3><p>使用log4j成功使catalina.out文件实现分割</p><ol><li><p>在tomcat根目录下建立<code>common/classes/log4j.properties</code>，内容如下:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">log4j.rootLogger=INFO, R </span><br><span class="line">log4j.appender.R=org.apache.log4j.RollingFileAppender </span><br><span class="line">log4j.appender.R.<span class="built_in">File</span>=$&#123;catalina.<span class="built_in">home</span>&#125;/logs/tomcat.newlog  #设定日志文件名</span><br><span class="line">log4j.appender.R.MaxFileSize=<span class="number">100</span>KB   #设定文件到<span class="number">100</span>kb即分割</span><br><span class="line">log4j.appender.R.MaxBackupIndex=<span class="number">10</span>   #设定日志文件保留的序号数</span><br><span class="line">log4j.appender.R.layout=org.apache.log4j.PatternLayout </span><br><span class="line">log4j.appender.R.layout.ConversionPattern=%p %t %c - %m%n</span><br></pre></td></tr></table></figure></li><li><p>在tomcat根目录下的<code>common/lib</code>下加入<code>log4j.jar</code>和<code>commons-logging.jar</code>。</p></li><li><p>重新启动tomcat即可。</p></li></ol><h3 id="1-3-3-自定义脚本切割"><a href="#1-3-3-自定义脚本切割" class="headerlink" title="1.3.3 自定义脚本切割"></a>1.3.3 自定义脚本切割</h3><p>编写一个.sh文件,并放到tomcat下的bin目录,在cron中自动执行,shell脚本如下:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span>  `dirname <span class="variable">$0</span>`</span><br><span class="line">d=`date +%Y%m%d`</span><br><span class="line">d7=`date -d<span class="string">'7 day ago'</span> +%Y%m%d`</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span>  ../logs/</span><br><span class="line"></span><br><span class="line">cp catalina.out catalina.out.<span class="variable">$&#123;d&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span> &gt; catalina.out </span><br><span class="line">rm -rf catalina.out.<span class="variable">$&#123;d7&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat入门使用</title>
      <link href="/Linux/2020-04-27-Tomcat%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8.html"/>
      <url>/Linux/2020-04-27-Tomcat%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h1><p>在Linux系统中安装Tomcat，详见<a href="">全新Linux使用入口</a>中的Tomcat安装</p><h1 id="2-访问配置优化"><a href="#2-访问配置优化" class="headerlink" title="2. 访问配置优化"></a>2. 访问配置优化</h1><h2 id="2-1-service-xml配置"><a href="#2-1-service-xml配置" class="headerlink" title="2.1 service.xml配置"></a>2.1 service.xml配置</h2><p>一个service.xml文件由 Server-&gt;Service-&gt;Engine-&gt;Host-&gt;Context 组成四层结构，从里层向外层分别是：</p><ul><li>Context： 即 Web 应用程序，一个 Context 即对于一个 Web 应用程序。</li></ul><ul><li>Host：即虚拟主机，比如 <code>www.dog.com</code>对应一个虚拟主机，<code>api.dog.com</code> 对于另一个虚拟主机。一个 Host 用于定义一个虚拟主机。（所谓的<strong>一个虚拟主机</strong>可简单理解为<strong>一个网站</strong>）</li><li>Engine：一组虚拟主机的集合。比如<code>www.dog.com</code> 和 <code>api.dog.com</code> 可以组成一组虚拟主机集合。</li><li>Service：一组 Engine 的集合，包括线程池 Executor 和连接器 Connector 的定义。</li></ul><h3 id="2-1-1-Service节点配置"><a href="#2-1-1-Service节点配置" class="headerlink" title="2.1.1 Service节点配置"></a>2.1.1 Service节点配置</h3><ul><li><p><strong>Connector端口配置</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"8080"</span> <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">connectionTimeout</span>=<span class="string">"20000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">redirectPort</span>=<span class="string">"8443"</span> /&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>一般情况下，Linux系统需要手动开放8080端口，但此处可以任意使用一个其他端口，避免常用端口直接访问</p><ul><li><p><strong>Engine集合配置</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Engine</span> <span class="attr">name</span>=<span class="string">"Catalina"</span> <span class="attr">defaultHost</span>=<span class="string">"blog.foreversfj.com"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>一个Engine可以有多个虚拟主机组成，defaultHost 用于指定访客在没有相应的虚拟主机时，Tomcat 默认选择的虚拟主机的名称。</p><blockquote><p>假如有3个域名都 DNS 解析到你的服务器，比如<code>dog.com</code>,<code>www.dog.com</code>,<code>api.dog.com</code>，当前你只配置了虚拟主机 <code>dog.com</code> 和 <code>www.dog.com</code>，那么当有个访客通过 <code>api.dog.com</code> 访问你的服务器时，Tomcat 就会依据 defaultHost 的设置返回其中一个虚拟主机运行的结果。实际应用中 defaultHost 应该设置为你的主力域名，比如 <code>www.dog.com</code>。</p></blockquote></li><li><p><strong>Host配置</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">"share.foreversfj.com"</span>  <span class="attr">appBase</span>=<span class="string">"/var/local/webWork/Share"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">unpackWARs</span>=<span class="string">"true"</span> <span class="attr">autoDeploy</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Valve</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.valves.AccessLogValve"</span> <span class="attr">directory</span>=<span class="string">"/var/local/webLogs/tomcat/share.foreversfj.com"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">prefix</span>=<span class="string">"share.foreversfj.com_access_log"</span> <span class="attr">suffix</span>=<span class="string">".txt"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">pattern</span>=<span class="string">"%h %l %u %t <span class="symbol">&amp;quot;</span>%r<span class="symbol">&amp;quot;</span> %s %b"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Host</span>&gt;</span></span><br></pre></td></tr></table></figure><p>一个 Host 配置即为一个虚拟主机，Host 配置节点各个属性的作用：</p><ul><li><strong>name</strong>：设置虚拟主机的域名，比如 <code>localhost</code>表示本机名称，实际应用时应该填写具体域名，比如 <code>www.dog.com</code> 或者<code>dog.com</code>，当然如果该虚拟主机是给内部人员访问的，也可以直接填写服务器的 ip 地址，比如 <code>192.168.1.10</code>。</li><li><strong>autoDeploy</strong>：是否允许自动部署，默认值是 true，即表示 Tomcat 会自动检测 appBase 目录下面的文件变化从而自动应用到正在运行的 Web 应用程序。</li><li><strong>unpackWARs</strong>：设置是否自动展开 war 压缩包再运行 Web 应用程序，默认值是 true。</li><li><strong>appBase</strong>：设置 Web 应用程序组的路径。一个虚拟主机可以由多个 Web 应用程序构成，所以这里的 appBase 所指向的目录应该是准备用于存放这一组 Web 应用程序的目录，而不是具体某个 Web 应用程序的目录本身（即使该虚拟主机只由一个 Web 应用程序组成）。</li></ul><blockquote><p>若只配appBase，不配Context 的docBase(appBase和docBase二选一就可以了)，则appBase的每个文件夹里都代表一个应用项目，默认访问ROOT命名的应用</p></blockquote></li><li><p><strong>Value日志配置</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Valve</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.valves.AccessLogValve"</span> <span class="attr">directory</span>=<span class="string">"/var/local/webLogs/tomcat/blog.foreversfj.com"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">prefix</span>=<span class="string">"share.foreversfj.com_access_log"</span> <span class="attr">suffix</span>=<span class="string">".txt"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">pattern</span>=<span class="string">"%h %l %u %t <span class="symbol">&amp;quot;</span>%r<span class="symbol">&amp;quot;</span> %s %b"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><code>directory</code>是保存日志的地址，<code>prefix</code>是日志文件的前缀，<code>suffix</code>是后缀，<code>pattern</code>是中缀</p><p>此外，在Host节点中配置Valve节点，是简单配置访客的访问日志的储存位置以及文件名。更为详细的日志配置可见于<a href="">Tomcat日志优化</a>。</p></li></ul><h3 id="2-1-2-多站点配置"><a href="#2-1-2-多站点配置" class="headerlink" title="2.1.2 多站点配置"></a>2.1.2 多站点配置</h3><p>有时我们需要在一台服务器上跑多个站点，通过 Tomcat 很容易实现这点，假设我们要搭建<code>www.dog.com</code> 和 <code>www.cat.com</code>这两个站点。则在编辑 Tomcat 的主配置文件 server.xml中，在默认的 Host 节点下面再加入如下两个新的 Host 节点：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">"www.dog.com"</span> <span class="attr">appBase</span>=<span class="string">"/var/local/tomcat6/dog"</span> <span class="attr">autoDeploy</span>=<span class="string">"true"</span> <span class="attr">unpackWARs</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Host</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">"www.cat.com"</span> <span class="attr">appBase</span>=<span class="string">"/var/local/tomcat6/cat"</span> <span class="attr">autoDeploy</span>=<span class="string">"true"</span> <span class="attr">unpackWARs</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Host</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>在Tomcat中其实还可以优化使用https访问，但是由于可以配合nginx+tomcat来搭建网站环境，所以我使用nginx代理，在nginx中配置https访问。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>全新Linux使用入口</title>
      <link href="/Linux/2020-04-27-%E5%85%A8%E6%96%B0Linux%E4%BD%BF%E7%94%A8%E5%85%A5%E5%8F%A3.html"/>
      <url>/Linux/2020-04-27-%E5%85%A8%E6%96%B0Linux%E4%BD%BF%E7%94%A8%E5%85%A5%E5%8F%A3.html</url>
      
        <content type="html"><![CDATA[<h1 id="更改主机名"><a href="#更改主机名" class="headerlink" title="更改主机名:"></a>更改主机名:</h1><ul><li><p>查看当前主机名:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostname</span><br></pre></td></tr></table></figure></li><li><p>更改 <code>/etc/hostname</code>和<code>/etc/hosts</code>文件, 将文件中的所有主机名更改为需要的主机名</p></li><li><p>重启系统</p></li></ul><h1 id="新建root用户"><a href="#新建root用户" class="headerlink" title="新建root用户"></a>新建root用户</h1><p><strong>（此操作最好在root登录环境下进行</strong>）</p><ul><li><p>添加用户</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd 用户名</span><br></pre></td></tr></table></figure></li><li><p>修改密码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd 用户名</span><br></pre></td></tr></table></figure></li><li><p>赋予root权限</p><ul><li><p>修改/etc/sudoers文件，找到root一行，在root下面添加一行：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户名ALL=(ALL) ALL</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="安装jdk"><a href="#安装jdk" class="headerlink" title="安装jdk"></a>安装jdk</h1><ul><li><p>卸载原生jdk</p><ul><li><p>查询已安装的openjdk</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep java</span><br></pre></td></tr></table></figure></li><li><p>卸载已安装的openjdk</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -e --nodeps xxx.x.x</span><br></pre></td></tr></table></figure></li></ul></li><li><p>上传jdk的gz包到服务器的<code>/usr/local/java</code>目录下</p></li><li><p>解压该包</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf jdk-xxx.xxx-x64.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>配置环境变量</p><p>修改配置文件<code>/etc/profile</code>，在末尾加入:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#java environment</span></span><br><span class="line"><span class="keyword">export</span> JAVA_HOME=/usr/local/java/jdk<span class="number">-11.0</span><span class="number">.4</span></span><br><span class="line"><span class="keyword">export</span> CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line"><span class="keyword">export</span> PATH=$PATH:$JAVA_HOME/bin</span><br></pre></td></tr></table></figure></li><li><p>让刚刚设置的环境变量生效</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></li><li><p>检查是否配置成功</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p>出现版本信息则为成功，否则失败，检查错误！</p></li></ul><h1 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h1><ul><li><p>上传gz包到服务器的<code>/usr/local/soft</code>目录下</p></li><li><p>解压该包</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf apache-tomcat<span class="number">-9.0</span><span class="number">.8</span>.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>重命名为tomcat</p></li><li><p>启动测试是否成功</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/soft/tomcat/bin/startup.sh</span><br></pre></td></tr></table></figure></li><li><p>关闭tomcat</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/soft/tomcat/bin/<span class="built_in">shutdown</span>.sh</span><br></pre></td></tr></table></figure></li><li><p>配置tomcat环境变量</p><ul><li><p>在<code>/etc/profile</code>最后添加:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> CATALINA_HOME=/usr/local/soft/tomcat</span><br></pre></td></tr></table></figure></li><li><p>配置文件即时生效</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></li></ul></li><li><p>配置tomcat快捷启动</p><ul><li><p>把tomcat的脚本文件拷一份到/etc/init.d目录</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/local/soft/tomcat/bin/catalina.sh /etc/init.d/tomcat</span><br></pre></td></tr></table></figure></li><li><p>把改脚本授权给所有用户执行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod <span class="number">755</span> /etc/init.d/tomcat</span><br></pre></td></tr></table></figure></li><li><p>在脚本中添加配置（必须在开头）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#chkconfig: 2345 10 90</span></span><br><span class="line"><span class="meta">#description: tomcat service</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">export</span> JAVA_HOME=/usr/local/java/jdk<span class="number">-11.0</span><span class="number">.4</span></span><br><span class="line"><span class="keyword">export</span> CATALINA_HOME=/usr/local/soft/tomcat/</span><br></pre></td></tr></table></figure></li><li><p>刷新服务并开机启动</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --add tomcat</span><br></pre></td></tr></table></figure></li><li><p>启动/关闭</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service tomcat start</span><br><span class="line">service tomcat <span class="built_in">stop</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>端口配置（需要在服务器提供商的控制台提前开放这些端口）</p><ul><li><p>开放80和8080端口</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=<span class="keyword">public</span> --add-port=<span class="number">80</span>/tcp --permanent</span><br><span class="line">firewall-cmd --zone=<span class="keyword">public</span> --add-port=<span class="number">8080</span>/tcp --permanent</span><br></pre></td></tr></table></figure></li><li><p>重新载入</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure></li><li><p>开机启用</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable firewalld</span><br></pre></td></tr></table></figure></li><li><p>查看状态</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld</span><br></pre></td></tr></table></figure></li><li><p>查看端口信息</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --<span class="built_in">list</span>-all</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="安装nginx1-16"><a href="#安装nginx1-16" class="headerlink" title="安装nginx1.16"></a>安装nginx1.16</h1><ul><li><p>安装各种依赖</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#gcc安装，nginx源码编译需要</span></span><br><span class="line">yum install gcc-c++</span><br><span class="line"></span><br><span class="line">#PCRE pcre-devel 安装，nginx 的 http 模块使用 pcre 来解析正则表达式</span><br><span class="line">yum install -y pcre pcre-devel</span><br><span class="line"></span><br><span class="line"><span class="meta">#zlib安装，nginx 使用zlib对http包的内容进行gzip</span></span><br><span class="line">yum install -y zlib zlib-devel</span><br><span class="line"></span><br><span class="line">#OpenSSL 安装，强大的安全套接字层密码库，nginx 不仅支持 http 协议，还支持 https（即在ssl协议上传输http）</span><br><span class="line">yum install -y openssl openssl-devel</span><br></pre></td></tr></table></figure></li><li><p>上传gz包到服务器的<code>/usr/local/soft</code>目录下</p></li><li><p>解压</p></li><li><p>使用默认配置安装</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/soft/nginx/configure</span><br></pre></td></tr></table></figure></li><li><p>快捷使用nginx命令</p><ul><li><p>修改环境变量配置文件<code>/etc/profile</code>，在path后添加<code>:$Path:/usr/local/nginx/sbin</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PATH=$PATH:$JAVA_HOME/bin:$Path:/usr/local/nginx/sbin</span><br></pre></td></tr></table></figure></li><li><p>重新生效</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></li></ul></li><li><p>测试启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nginx -t</span><br><span class="line">nginx</span><br></pre></td></tr></table></figure></li><li><p>关闭</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s quit</span><br></pre></td></tr></table></figure></li></ul><h1 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h1><ol><li><p>用<code>git --version</code>命令检查是否已经安装</p><p><img src="http://cdn.foreversfj.com/image/blog/20200428/80w3uzTRgwt4.png" alt=""></p></li><li><p>由于本机使用CentOS8版本，可以直接使用yum安装</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure></li><li><p>安装完成之后查看git版本</p><p><img src="http://cdn.foreversfj.com/image/blog/20200428/8zq0sqRQeCzB.png" alt=""></p></li><li><p>此时说明已安装好了。如果需要特定版本的Git，则可以通过下载编译安装的方式。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何访问黑暗网络（Deep Web）</title>
      <link href="/%E6%8A%80%E8%83%BD/2019-06-29-%E5%A6%82%E4%BD%95%E8%AE%BF%E9%97%AE%E9%BB%91%E6%9A%97%E7%BD%91%E7%BB%9C.html"/>
      <url>/%E6%8A%80%E8%83%BD/2019-06-29-%E5%A6%82%E4%BD%95%E8%AE%BF%E9%97%AE%E9%BB%91%E6%9A%97%E7%BD%91%E7%BB%9C.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-如何访问黑暗网络（Deep-Web）"><a href="#1-如何访问黑暗网络（Deep-Web）" class="headerlink" title="1. 如何访问黑暗网络（Deep Web）"></a>1. 如何访问黑暗网络（Deep Web）</h1><ul><li><strong>转自<code>thedarkweblinks</code>：</strong><br/><a href="https://www.thedarkweblinks.com/how-to-access-the-dark-web/" target="_blank" rel="noopener">https://www.thedarkweblinks.com/how-to-access-the-dark-web/</a></li></ul><p>&emsp;&emsp;你是否是暗网的初学者并正在寻找如何访问黑暗网络的正确方法？或者如何进入暗网？如果是，那么你会喜欢本深度指南。本指南将定义您在探索任何黑暗网络链接或暗网存储之前应了解的所有必要信息。如果没有正确的隐私或安全性，黑暗的网络可能对您来说非常危险，不再浪费时间让我们继续前进！</p><p><strong>以下是本指南中的内容。</strong></p><ul><li><a href="https://www.thedarkweblinks.com/how-to-access-the-dark-web/#deepweb" target="_blank" rel="noopener">什么是Deep Web？</a></li><li><a href="https://www.thedarkweblinks.com/how-to-access-the-dark-web/#darkweb" target="_blank" rel="noopener">什么是黑暗网络？</a></li><li><a href="https://www.thedarkweblinks.com/how-to-access-the-dark-web/#keypoints" target="_blank" rel="noopener">访问黑暗网站之前众所周知的安全要点</a></li><li><a href="https://www.thedarkweblinks.com/how-to-access-the-dark-web/#steps" target="_blank" rel="noopener">一步一步地访问Dark Web</a></li><li><a href="https://www.thedarkweblinks.com/how-to-access-the-dark-web/#accessible" target="_blank" rel="noopener">如何建立可访问的洋葱链接</a></li></ul><p>&emsp;&emsp;但在访问黑暗网络之前，您需要了解什么是黑暗网络？或什么是深层网络？</p><p>&emsp;&emsp;因为这两个术语，我在本文中使用了很多次，这就是为什么我首先要告诉你关于深度网络和黑暗网络的基本原理。</p><p>&emsp;&emsp;在这个现代化的时代，每个人都在他/她忙碌的生活中使用互联网，每个人都已经知道这一点，在你的情况下，你找到了如何访问黑暗网络的答案，这是你阅读这篇文章的主要原因。</p><p>&emsp;&emsp;但是，您知道，您只能通过计算机或手机访问4％的互联网。</p><p>&emsp;&emsp;<strong>注意：</strong>  只有4％的互联网拥有数百万个互联网站点，您可以从计算机，移动设备或任何其他互联网接入设备访问这些站点。这个4％的互联网空间由<code>clearnet</code>或表面网络调用。</p><p>&emsp;&emsp;我想你不知道这些事情。如果你知道那么听起来很棒。</p><p>&emsp;&emsp;您是否知道4％互联网之外意味着互联网的剩余部分是96％互联网。</p><p>&emsp;&emsp;您能否假设您可以在这个剩余空间中找到什么类型的东西，网站和数据？</p><p>&emsp;&emsp;我想你不知道..但是你脑子里有这个问题剩下的互联网有什么？以及如何进入这个地方？</p><p>&emsp;&emsp;是的，现在，你不知道，但是我正在告诉你所有的简短描述。</p><p>&emsp;&emsp;但首先我想告诉你，什么是Deep Web？</p><h2 id="1-1-什么是Deep-Web？"><a href="#1-1-什么是Deep-Web？" class="headerlink" title="1.1. 什么是Deep Web？"></a>1.1. 什么是Deep Web？</h2><p>&emsp;&emsp;就像深海（海有不可想象的东西，结构，布局，动物）。Deep网站还表示其余96％的互联网空间，这里有数十亿的网站，它们基于各种协议，网络。</p><p>&emsp;&emsp;这些网站有<strong>安全和研究文件，军事研究，私人公司数据库，数据中心，政府数据，政府机构数据，视频库和许多</strong>你无法访问<strong>的不可想象的东西</strong>，因为这些类型的文件或网站不是可由搜索引擎索引。</p><p>&emsp;&emsp;这是主要原因，为什么你不能在普通浏览器的帮助下访问这些类型的深度网站。</p><p><img src="//cdn.foreversfj.com/image/blog/20190714/LXuebKaQ6j9p.jpg!blog" alt=""></p><p>&emsp;&emsp;并且在某些情况下，内容具有私有访问权限，受密码保护，动态内容和未链接的类型内容，我们无法访问，因为我们没有关于该类型数据的任何信息，并且没有适当的数据，有效的访问URL，有效用户名或密码，任何人都可以获取这些类型的匿名数据。</p><p>&emsp;&emsp;是的，你是对的没人！</p><p>&emsp;&emsp;这是主要原因，我们不知道，也无法猜测深度网是多大？</p><p>&emsp;&emsp;但只有一种情况，您可以访问这些网站，如果您有可访问的网站地址和有效的用户名或密码。否则，你不能。</p><p>&emsp;&emsp;但是在这里我们有一些解决方案，通过它我们可以打开一些可见的深度网站，但还有一件事。如果您想访问这些类型的深层网站，则需要将tor浏览器安装到您的计算机中。Tor浏览器只是一种软件，可以让您访问深度网页，因为浏览器可以处理路由技术并为您提供安全的环境。</p><p>&emsp;&emsp;如果有人试图在深层网络上跟踪您的身份，那么他们就无法跟踪您的实际位置，这意味着您在深层网络上正在做什么，您正在访问什么？你住在哪里？你是谁？如果您仍然对深度网络有任何疑问或疑惑，请查看深度网站的<a href="https://www.thedarkweblinks.com/what-is-the-deep-web/" target="_blank" rel="noopener">深度指南</a>。</p><p>&emsp;&emsp;让我们来谈谈。</p><p>&emsp;&emsp;现在是时候了解黑暗的网络了。</p><p>&emsp;&emsp;黑暗网络是第二个术语，也主要用于深度网络，这就是我现在描述黑暗网络的原因..</p><h2 id="1-2-什么是黑暗网络？"><a href="#1-2-什么是黑暗网络？" class="headerlink" title="1.2. 什么是黑暗网络？"></a>1.2. 什么是黑暗网络？</h2><p>&emsp;&emsp;你已经知道，深度网络覆盖了96％的互联网空间，深度网络拥有不可思议的大小互联网空间，但深度网络也有一些地方，你可以做非法的事情，就像你可以购买毒品，武器，黑客和破解软件，可以观看色情视频，论坛，博客，可以阅读研究论文，也可以匿名雇用任何人和更多的东西。这种类型的私人互联网空间，专家称为黑暗网络。</p><p>&emsp;&emsp;读完这段后，我想。当然，你也渴望进入<a href="https://www.thedarkweblinks.com/" target="_blank" rel="noopener">黑暗的网络</a>。</p><p>&emsp;&emsp;是</p><p>&emsp;&emsp;哦，没问题，这个完整的指南会告诉你所有安全的方法，你可以找到如何访问黑暗网络的解决方案。</p><p>&emsp;&emsp;但是在如何访问黑暗网络之前，我想告诉你在访问黑暗网络时需要考虑的一些安全要点。</p><h2 id="1-3-访问黑暗网站的安全要点"><a href="#1-3-访问黑暗网站的安全要点" class="headerlink" title="1.3. 访问黑暗网站的安全要点"></a>1.3. 访问黑暗网站的安全要点</h2><p>&emsp;&emsp;在这里，我的主要目标是为您提供最佳信息，您可以在访问任何非法活动时在深层网络或黑暗网络上保护自己。</p><p>&emsp;&emsp;<strong>注意：</strong>我告诉你，如何仅出于教育或研究目的访问黑暗网站，我不建议您访问黑暗网站链接。这完全是您的选择，您想要在黑暗的网络上访问什么，以及您将在黑暗的网络上访问什么。</p><p>&emsp;&emsp;只有您对您在互联网上所做的所有非法或道德活动负责，如果您在黑暗的网络上遇到任何损失，损坏或购买任何非法行为，那么我们不对您的活动负责。</p><p>&emsp;&emsp;<strong>注意：</strong>一些黑暗的网站有心灵打扰，酷刑，毒品，小工具，色情，儿童色情，黑客攻击，破解，信用卡转储，武器销售和购买，人体实验，雇用杀手服务等等。</p><p>&emsp;&emsp;这就是为什么如果您对此类内容不满意，请不要访问此链接。</p><p>&emsp;&emsp;<strong>注意：</strong>我们不支持任何提供非法活动，儿童色情或毒品的网站。这取决于你现在正在做什么。</p><p>&emsp;&emsp;据我说，暗网或深网不是危险的地方，你可以利用这个地方获取更多的信息和研究任务，在这里你没有任何界限，也没有人无法跟踪你也无法透露你的身份。在黑暗的网络上，您可以匿名执行任何任务。</p><p><strong>有关如何匿名访问黑暗网站的要点：</strong></p><ul><li>不要与黑暗网络上的任何人分享您的身份。</li><li>不要在任何黑暗网站上使用您的原始名称或信息。</li><li>在访问黑暗网络时始终关闭外部应用程序。</li><li>从您的笔记本电脑或工作站阻止网络摄像头或麦克风。如果你用黑色胶带点击网络摄像头，那么它对你有好处。</li><li>在访问黑暗网站之前，购买任何高级VPN（虚拟专用网络）并安装到您的计算机中。我在这里使用<a href="https://go.nordvpn.net/aff_c?offer_id=15&aff_id=11140&url_id=902" target="_blank" rel="noopener">NordVPN</a>，因为NordVPN提供2个TOR支持服务器，并且还有零日志流量。</li><li>始终在启动浏览器之前首先启动VPN。</li><li>访问<a href="http://www.thedarkweblinks.com/" target="_blank" rel="noopener">黑暗网站</a>始终进入JavaScript禁用模式。</li></ul><p>&emsp;&emsp;不要惊慌，如果你不知道，<a href="https://www.deepwebsiteslinks.com/nordvpn-review/" target="_blank" rel="noopener">如何安装NordVPN</a>&ensp;以及&ensp;<a href="https://www.thedarkweblinks.com/tor-browser-review/" target="_blank" rel="noopener">如何使用tor浏览器</a>&ensp;或如何禁用javascript到浏览器，在这里我告诉你所有的事情一步一步的过程。</p><p>&emsp;&emsp;但在这里你应该知道什么是VPN以及为什么你应该在访问黑暗网站之前购买VPN，以及为什么你需要在下载Tor浏览器或启动浏览器之前启动VPN等等。</p><p>&emsp;&emsp;让我们在如何访问黑暗网络并知道它们是如何工作之前开始这些事情……</p><h2 id="1-4-虚拟专用网（VPN）"><a href="#1-4-虚拟专用网（VPN）" class="headerlink" title="1.4. 虚拟专用网（VPN）"></a>1.4. 虚拟专用网（VPN）</h2><p>&emsp;&emsp;我认为你有关于互联网的初级技能，如果是，那么它将帮助你理解VPN的概念。</p><p>&emsp;&emsp;基本上当我们尝试访问任何互联网网站时，我们会在您安装的浏览器中输入网站名称，然后按回车键。</p><p>&emsp;&emsp;在此方案中，网站名称指示一个唯一的地址主机（网站主机所在的位置）。这叫做IP地址，通过这个地址，任何人都可以在全球范围内找到网站 但为了记住目的，我们为IP地址分配了别名。这个别名，我们通过域名或站点地址来呼叫。</p><p>&emsp;&emsp;通常，您可以借助IP地址和域名访问网站。</p><p>&emsp;&emsp;每当您访问这些类型的互联网网站时，网站始终会跟踪您的信息，例如您用于访问网站的浏览器以及您访问这些网站的计算机IP地址。</p><p>&emsp;&emsp;如果您使用黑暗网站，所有这些信息都非常敏感。这就是为什么你需要在黑暗网络上保护这些东西。</p><p>&emsp;&emsp;VPN是一种方式，它为您提供所有这些问题的安全性，VPN服务为您创建私有路由，这是无法跟踪的，并借助虚假IP地址为您提供隐藏的身份。</p><p>&emsp;&emsp;<strong>例如：</strong>假设您要离开美国，想要尝试任何网站，并且您想要隐藏您的身份，那么您需要启动VPN并在连接服务器时选择任何服务器然后您准备隐藏您的隐私。现在，如果您访问任何网站，那么该网站无法判断您。你是从哪个地方来的。</p><p>&emsp;&emsp;他们只能找到由VPN软件创建的假身份。这就是为什么在访问黑暗网站之前需要使用VPN服务的主要原因。</p><p>&emsp;&emsp;如果您想在黑暗的网络上匿名保护您的身份，那么您应该购买任何<a href="https://www.thedarkweblinks.com/best-vpn-services/" target="_blank" rel="noopener">高级VPN服务</a>，我建议您使用  <a href="https://go.nordvpn.net/aff_c?offer_id=15&aff_id=11140&url_id=902" target="_blank" rel="noopener">NordVPN服务</a>。</p><p>&emsp;&emsp;<strong>注意：</strong>  确保在启动浏览器或下载Tor浏览器之前，您运行<a href="https://go.nordvpn.net/aff_c?offer_id=15&aff_id=11140&url_id=902" target="_blank" rel="noopener">NordVPN服务</a>。</p><p>&emsp;&emsp;我想现在你已经找到了你以前的问题，答案。就像为什么VPN是获取访问权限或黑暗网络或访问深度网络所必需的。</p><p>&emsp;&emsp;让我们继续，了解如何使用VPN匿名访问黑暗网站。</p><h2 id="1-5-一步一步的过程："><a href="#1-5-一步一步的过程：" class="headerlink" title="1.5. 一步一步的过程："></a>1.5. 一步一步的过程：</h2><p><strong>如何匿名访问黑暗网站</strong></p><p>&emsp;&emsp;有人说，黑暗网是非常危险的地方，没有人需要访问这里。但是我想告诉你..黑暗网站不是危险或心灵不安的地方，但是一些黑暗的网站有这些类型的内容，这就是为什么如果你不喜欢这些类型的东西那么你不应该访问这种类型的深度网站。</p><p>&emsp;&emsp;让我们开始……如何访问黑暗网络。</p><p><font color=red>1）</font>经过一些准备，推荐或有关深度网络，黑暗网络或VPN的信息。现在是时候准备桌面以便访问黑暗网页了。根据一些建议的要点，您需要在计算机上安装VPN。</p><p>&emsp;&emsp;在此之前，您需要购买任何高级VPN服务。对于Access the Dark网站，我推荐你，尝试使用<a href="https://go.nordvpn.net/aff_c?offer_id=15&aff_id=11140&url_id=902" target="_blank" rel="noopener">NordVPN，</a>因为在这个演示教程中，我也使用<a href="https://go.nordvpn.net/aff_c?offer_id=15&aff_id=11140&url_id=902" target="_blank" rel="noopener">NordVPN高级服务</a>。</p><p><strong>为什么我推荐NordVPN：</strong></p><ul><li>支持Tor网络。</li><li>提供3个专用的Onion Over服务器</li><li>零日志流量</li><li>30天退款保证</li><li>非常人性化，易于使用</li><li>无限带宽，超快速</li></ul><p><a href="https://go.nordvpn.net/aff_c?offer_id=15&aff_id=11140&url_id=902" target="_blank" rel="noopener">购买NordVPN</a></p><p>&emsp;&emsp;如果您已经拥有其他VPN或NordVPN访问权限，则将软件安装到您的计算机中（安装过程与您对其他软件的安装过程相同）。成功安装软件后，运行VPN服务并按照给定的屏幕截图连接服务器。</p><p>&emsp;&emsp;这里我有<a href="https://go.nordvpn.net/aff_c?offer_id=15&aff_id=11140&url_id=902" target="_blank" rel="noopener">NordVPN软件</a>，这就是我开始使用NordVPN的原因，一旦你开始，你会看到如下的屏幕。现在您需要输入您的电子邮件和密码，然后单击 <code>登录</code> 按钮。</p><p><img src="//cdn.foreversfj.com/image/blog/20190714/nSvgV5U1jNu8.png!blog" alt=""></p><p>&emsp;&emsp;如果您的用户名或密码是正确的，那么您将获得与我一样的屏幕截图。</p><p><img src="//cdn.foreversfj.com/image/blog/20190714/8t651qqrHaDd.png!blog" alt=""></p><p>&emsp;&emsp;现在是时候连接最好的服务器，但在<a href="https://go.nordvpn.net/aff_c?offer_id=15&aff_id=11140&url_id=902" target="_blank" rel="noopener">NordVPN</a> 内部，您可以选择Onion Over VPN支持服务器。对于服务器选择，您需要单击“ <code>特殊服务器</code> 之后的 <code>国家/地区</code> ” 。 点击专业服务器后，您将获得如下的NordVPN屏幕。</p><p><img src="//cdn.foreversfj.com/image/blog/20190714/Ik6ThSErgdL1.png!blog" alt=""></p><p>&emsp;&emsp;现在，您需要点击 <code>Onion Over VPN</code> 并选择您想要的任何一个洋葱支持服务器（拉脱维亚洋葱＃1，瑞典洋葱＃2，荷兰洋葱＃1）（始终选择最少装载的服务器），然后按“ <code>连接</code> ”按钮。</p><p><img src="//cdn.foreversfj.com/image/blog/20190714/UKpkld5OWE2J.png!blog" alt=""></p><p>&emsp;&emsp;现在我的计算机连接到拉脱维亚洋葱＃1服务器，现在你也连接了，如果是，那么我们将为下一步做好准备。</p><p>&emsp;&emsp;这里已经完成了如何访问黑暗网络的第一步。</p><p><font color=red>2）</font>成功安装VPN后立即安装Tor浏览器，现在我们首先需要将浏览器捆绑包下载到您的计算机上。</p><p>&emsp;&emsp;如需下载，可以使用Tor Browser Bundle官方网站，这里是链接<a href="https://www.torproject.org/" target="_blank" rel="noopener">https://www.torproject.org</a>。</p><p><img src="//cdn.foreversfj.com/image/blog/20190714/TTPqgsmpBetu.jpg!blog" alt=""></p><p>&emsp;&emsp;在这个演示教程中，我使用的是Windows计算机，这就是我下载最新Windows版本的原因。您可以根据您的操作系统选择任何版本。</p><p><img src="//cdn.foreversfj.com/image/blog/20190714/5ELaCH9vDxTG.jpg!blog" alt=""></p><p>&emsp;&emsp;如果你有Mac电脑，那么下载mac版本捆绑包，如果你有Linux然后下载Linux版本相关的tor捆绑。</p><p>&emsp;&emsp;现在我的Tor捆绑下载过程已经完成，然后安装到本地计算机的时间，这就是你需要运行tor捆绑设置向导的原因。</p><p>&emsp;&emsp;第一个Goto安装目录，您可以在其中下载副本然后双击可执行文件。</p><p><img src="//cdn.foreversfj.com/image/blog/20190714/LBafn6OLvYUh.jpg!blog" alt=""></p><p>&emsp;&emsp;如果您有正确的副本，那么您的安装过程将开始，您将有一个通知窗口，您需要选择所需的语言。</p><p><img src="//cdn.foreversfj.com/image/blog/20190714/lnK4W4VRI1GN.jpg!blog" alt=""></p><p>&emsp;&emsp;这里我选择的是英语，然后按ok进一步的步骤。</p><p>&emsp;&emsp;在这一步之后，希望你也像我一样得到窗户..</p><p>&emsp;&emsp;在这里，您需要设置要执行此设置的安装目录，根据此选项，您还可以手动设置特定目录，但在此我默认使用目录位置。</p><p><img src="//cdn.foreversfj.com/image/blog/20190714/2vMmjv6OPkOQ.jpg!blog" alt=""></p><p>&emsp;&emsp;现在是下一个设置向导窗口的时间，它显示您的设置状态..就像我的电脑一样。</p><p><img src="//cdn.foreversfj.com/image/blog/20190714/fU8PGF1TsaQn.jpg!blog" alt=""></p><p>&emsp;&emsp;如果完成此过程，则还将完成Tor捆绑安装过程。</p><p><img src="//cdn.foreversfj.com/image/blog/20190714/Dr93SWBnsJOz.jpg!blog" alt=""></p><p>&emsp;&emsp;已经完成了如何访问黑暗网络的另一个步骤..</p><p><font color=red>3）</font>这是第三步，但却是如何进入黑暗网络的重要一步。这是专门用于捆绑首次设置的。</p><p>&emsp;&emsp;点击新安装的tor浏览器图标，点击图标后，您将获得新的浏览器窗口。</p><p>&emsp;&emsp;在访问黑暗网页之前，您需要禁用javascript到Tor浏览器。</p><p>&emsp;&emsp;对于禁用javascript，您需要单击左上方菜单中的S符号。</p><p><img src="//cdn.foreversfj.com/image/blog/20190714/DU0jyRMmfetG.jpg!blog" alt=""></p><p>&emsp;&emsp;点击后你会得到一些其他相关的选项，在这里你需要选择“ <strong><em><code>撤销临时权限</code></em></strong>”。</p><p><img src="//cdn.foreversfj.com/image/blog/20190714/XkD4sfxmnYae.png!blog" alt=""></p><p>&emsp;&emsp;在此步骤之后，您的S符号将像我一样显示，如果您的S符号也有红色圆圈，这意味着您的Java脚本被禁用。</p><h2 id="1-6-如何建立可访问的洋葱链接"><a href="#1-6-如何建立可访问的洋葱链接" class="headerlink" title="1.6. 如何建立可访问的洋葱链接"></a>1.6. 如何建立可访问的洋葱链接</h2><p>&emsp;&emsp;现在，您知道如何访问黑暗网络。你需要工作洋葱链接。在这里，我将逐步告诉您通过“<font color=red>红色字符串</font>”或“ <strong>粗体链接字符串”</strong>获取工作链接。</p><p>&emsp;&emsp;如果您想知道为什么我更改了文本中的所有链接，让我告诉您现在共享洋葱链接是非法的。这是主要原因，我们用红色文本字符串或粗体替换所有链接。</p><p>&emsp;&emsp;如果您没有良好的VPN服务，请立即离开。首先获得良好的VPN（推荐NordVPN）并回来。从那时起，当局比以往任何时候都更加严肃。</p><p><strong>链接创建公式：</strong></p><p>http：//（红色字符串或粗体字符串）.onion</p><p><strong>例如：</strong></p><p>&emsp;&emsp;你有Facebook的文字<font color=red>facebookcorewwwi</font> 。</p><p>&emsp;&emsp;在这种情况下，http：// <font color=red>facebookcorewwwi</font> .onion＃Working洋葱链接，现在您可以复制此链接并粘贴到您的Tor浏览器中。</p><p>&emsp;&emsp;现在您已准备好找到如何访问黑暗网络的答案。但这里我们有与黑暗网站链接相关的问题。因为你是初学者，并且不知道最好的黑暗网络链接。</p><p>&emsp;&emsp;不要多考虑这个条件，因为我有一个帖子，我定期更新黑暗的网站链接，并不时删除此列表中的死链接。</p><h2 id="1-7-Active-Dark-Web-Links的最佳资源："><a href="#1-7-Active-Dark-Web-Links的最佳资源：" class="headerlink" title="1.7. Active Dark Web Links的最佳资源："></a>1.7. Active Dark Web Links的最佳资源：</h2><ul><li><a href="http://www.deepwebsiteslinks.com/" target="_blank" rel="noopener">http://www.deepwebsiteslinks.com</a></li><li><a href="http://www.thedarkweblinks.com/" target="_blank" rel="noopener">http://www.thedarkweblinks.com</a></li><li><a href="http://thehiddenwiki.org/" target="_blank" rel="noopener">http://thehiddenwiki.org/</a></li><li>zqktlwi4fecvo6ri</li><li>32rfckwuorlf4dlv</li><li>nlmymchrmnlmbnii</li><li>torlinksccquz7bi</li></ul><p>&emsp;&emsp;鉴于所有链接都是最受信任和日常更新的，但有些链接与clearnet有关，有些则与深度网络有关。</p><p>&emsp;&emsp;如果你很困惑如何找到黑暗的网络链接，那么这是一个非常简单的过程，在正常的互联网网站有域名扩展，如.com，.net，.org，.edu，.info或许多其他人，但深度网站有扩展。洋葱。</p><p>&emsp;&emsp;这里给出了一些网站有.onion域名扩展，这就是为什么这些网站与深度网络相关，你不能访问这些黑暗的网络链接没有浏览器。</p><h3 id="最好的暗网市场："><a href="#最好的暗网市场：" class="headerlink" title="最好的暗网市场："></a>最好的暗网市场：</h3><p>&emsp;&emsp;与普通互联网相同，黑暗网站也有一些非常受欢迎的网站，每天都有非常高的流量，超过数千名用户实时访问这些网站并在这些网站上执行操作。</p><p>&emsp;&emsp;哈喽<em>，我在这里给出了一些最好的暗网市场名称：</em></p><ul><li><font color=red>wet4o7ali46htxkm</font>  - <strong>Dream Market</strong> </li><li><font color=red>empiremktxgjovhm</font>  - <strong>帝国市场</strong></li><li><font color=red>wallstyizjhkrvmj</font>  - <strong>华尔街市场</strong></li></ul><p>&emsp;&emsp;完成所有讨论后，如果您仍然对如何访问深层网站有疑问，请不要惊慌失措。现在复制我在这里给出的任何给定链接并粘贴到Tor浏览器包中。然后按回车键。Holla如果您的浏览器有任何网站网页，那么您已成功设置了黑暗的Web访问设置。</p><p>&emsp;&emsp;我在这里使用<a href="http://wet4o7ali46htxkm.onion/?ai=2199791929" target="_blank" rel="noopener">梦想市场</a>，这是我的截图。希望您现在能够回答如何访问黑暗网络的问题。</p><p><img src="//cdn.foreversfj.com/image/blog/20190714/lJaD4AahyY6L.jpg!blog" alt=""></p><h3 id="关于Darknet-Markets的一些简短描述："><a href="#关于Darknet-Markets的一些简短描述：" class="headerlink" title="关于Darknet Markets的一些简短描述："></a>关于Darknet Markets的一些简短描述：</h3><p>&emsp;&emsp;我很高兴你，因为你能够访问黑暗的网络，这就是为什么我想告诉你一些关于暗网市场的简要描述。</p><p>&emsp;&emsp;根据暗网市场，那些提供产品销售或购买服务的网站，这些类型的网站称为暗网市场。但是现在暗网还拥有<a href="https://www.deepwebsiteslinks.com/darknet-markets-links/" target="_blank" rel="noopener">100个暗网市场</a>，但只有少数网站拥有良好且值得信赖的地位。</p><p>&emsp;&emsp;我已经在最好的暗网市场部分提到了四个名字。</p><p>&emsp;&emsp;所有这些市场都提供药品，武器，黑客软件，服务，小工具，杂草，书籍，在这里你可以通过加密货币（比特币）购买任何列出的项目。</p><p><strong>以下是梦幻市场的简要说明</strong></p><p>&emsp;&emsp;梦想市场是最值得信赖的，现在大多数人使用暗网市场，每天都有超过数百万人访问这个网站并执行他的行为，如销售产品或购买产品。在这里，您可以获得与欺诈，药品，化学品，指南和教程，数字产品，武器，梳理物品，服务，软件，安全和托管等相关的产品。</p><p>&emsp;&emsp;我想，我涵盖了与如何访问黑暗网络相关的所有小点和大点，如果您对此主题有任何疑问，请在此处发表评论并分享您关于我的文章“如何访问黑暗网页”。</p>]]></content>
      
      
      <categories>
          
          <category> 技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暗网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>转-大道至简——Hexo简洁主题推荐</title>
      <link href="/%E5%8D%9A%E5%AE%A2/2019-06-10-%E8%BD%AC-%E5%A4%A7%E9%81%93%E8%87%B3%E7%AE%80%E2%80%94%E2%80%94Hexo%E7%AE%80%E6%B4%81%E4%B8%BB%E9%A2%98%E6%8E%A8%E8%8D%90.html"/>
      <url>/%E5%8D%9A%E5%AE%A2/2019-06-10-%E8%BD%AC-%E5%A4%A7%E9%81%93%E8%87%B3%E7%AE%80%E2%80%94%E2%80%94Hexo%E7%AE%80%E6%B4%81%E4%B8%BB%E9%A2%98%E6%8E%A8%E8%8D%90.html</url>
      
        <content type="html"><![CDATA[<p>&emsp;&emsp;Maupassant最初是由<a href="https://github.com/pagecho/" target="_blank" rel="noopener">Cho</a>大神为<a href="http://typecho.org/" target="_blank" rel="noopener">Typecho</a>平台设计开发的一套响应式模板，体积只有20KB，在各种尺寸的设备上表现出色。由于其简洁大气的风格受到许多用户喜爱，目前也已经被移植到了多个平台上，例如：</p><ul><li>Typecho：<a href="https://github.com/pagecho/maupassant/" target="_blank" rel="noopener">https://github.com/pagecho/maupassant/</a></li><li>Octopress：<a href="https://github.com/pagecho/mewpassant/" target="_blank" rel="noopener">https://github.com/pagecho/mewpassant/</a></li><li>Farbox：<a href="https://github.com/pagecho/Maupassant-farbox/" target="_blank" rel="noopener">https://github.com/pagecho/Maupassant-farbox/</a></li><li>Wordpress：<a href="https://github.com/iMuFeng/maupassant/" target="_blank" rel="noopener">https://github.com/iMuFeng/maupassant/</a></li><li>Ghost: <a href="https://github.com/LjxPrime/maupassant/" target="_blank" rel="noopener">https://github.com/LjxPrime/maupassant/</a></li></ul><h1 id="博客地址在这"><a href="#博客地址在这" class="headerlink" title="博客地址在这"></a><a href="https://www.haomwei.com/" target="_blank" rel="noopener">博客地址在这</a></h1><h1 id="Github地址在这"><a href="#Github地址在这" class="headerlink" title="Github地址在这"></a><a href="https://github.com/tufu9441/maupassant-hexo" target="_blank" rel="noopener">Github地址在这</a></h1><p><strong>代码发布在Github上，有兴趣的朋友可以下载试用，并欢迎反馈问题：</strong><br><a href="https://github.com/tufu9441/maupassant-hexo" target="_blank" rel="noopener">https://github.com/tufu9441/maupassant-hexo</a></p><p><img src="https://www.haomwei.com/images/maupassant.jpg" alt="主题效果"></p><h1 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h1><p>安装主题和渲染器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https:&#x2F;&#x2F;github.com&#x2F;tufu9441&#x2F;maupassant-hexo.git themes&#x2F;maupassant</span><br><span class="line">$ npm install hexo-renderer-pug --save</span><br><span class="line">$ npm install hexo-renderer-sass --save</span><br></pre></td></tr></table></figure><p>编辑Hexo目录下的 <code>_config.yml</code>，将<code>theme</code>的值改为<code>maupassant</code>。</p><p>注：若<code>npm install hexo-renderer-sass</code>安装时报错，可能是国内网络问题，请尝试使用代理或者切换至<a href="http://npm.taobao.org/" target="_blank" rel="noopener">淘宝NPM镜像</a>安装，感谢光头强提供的<a href="http://www.rockcoding.com/2016/03/02/hexo/" target="_blank" rel="noopener">方法</a>。</p><h2 id="功能配置"><a href="#功能配置" class="headerlink" title="功能配置"></a>功能配置</h2><p>默认配置:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span> <span class="comment">## If you want to use fancybox please set the value to true.</span></span><br><span class="line"><span class="attr">disqus:</span> <span class="comment">## Your disqus_shortname, e.g. username</span></span><br><span class="line"><span class="attr">uyan:</span> <span class="comment">## Your uyan_id. e.g. 1234567</span></span><br><span class="line"><span class="attr">livere:</span> <span class="comment">## Your livere data-uid, e.g. MTAyMC8zMDAxOC78NTgz</span></span><br><span class="line"><span class="attr">changyan:</span> <span class="comment">## Your changyan appid, e.g. cyrALsXc8</span></span><br><span class="line"><span class="attr">changyan_conf:</span> <span class="comment">## Your changyan conf, e.g. prod_d8a508c2825ab57eeb43e7c69bba0e8b</span></span><br><span class="line"><span class="attr">gitment:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span> <span class="comment">## If you want to use Gitment comment system please set the value to true.</span></span><br><span class="line">  <span class="attr">owner:</span> <span class="comment">## Your GitHub ID, e.g. username</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="comment">## The repository to store your comments, make sure you're the repo's owner, e.g. imsun.github.io</span></span><br><span class="line">  <span class="attr">client_id:</span> <span class="comment">## GitHub client ID, e.g. 75752dafe7907a897619</span></span><br><span class="line">  <span class="attr">client_secret:</span> <span class="comment">## GitHub client secret, e.g. ec2fb9054972c891289640354993b662f4cccc50</span></span><br><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span> <span class="comment">## If you want to use Gitment comment system please set the value to true.</span></span><br><span class="line">  <span class="attr">owner:</span>  <span class="comment">## Your GitHub ID, e.g. username</span></span><br><span class="line">  <span class="attr">repo:</span>  <span class="comment">## The repository to store your comments, make sure you're the repo's owner, e.g. gitalk.github.io</span></span><br><span class="line">  <span class="attr">client_id:</span>  <span class="comment">## GitHub client ID, e.g. 75752dafe7907a897619</span></span><br><span class="line">  <span class="attr">client_secret:</span>  <span class="comment">## GitHub client secret, e.g. ec2fb9054972c891289640354993b662f4cccc50</span></span><br><span class="line">  <span class="attr">admin:</span>  <span class="comment">## Github repo owner and collaborators, only these guys can initialize github issues.</span></span><br><span class="line"><span class="attr">valine:</span> <span class="comment">## https://valine.js.org</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span> <span class="comment">## If you want to use Valine comment system, please set the value to true.</span></span><br><span class="line">  <span class="attr">appid:</span> <span class="comment">## Your LeanCloud application App ID, e.g. pRBBL2JR4N7kLEGojrF0MsSs-gzGzoHsz</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="comment">## Your LeanCloud application App Key, e.g. tjczHpDfhjYDSYddzymYK1JJ</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="comment">## Mail notifier, see https://github.com/xCss/Valine/wiki/Valine-评论系统中的邮件提醒设置</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="comment">## Validation code.</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">Just</span> <span class="string">so</span> <span class="string">so</span> <span class="comment">## Comment box placeholders.</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">'mm'</span> <span class="comment">## Gravatar type, see https://github.com/xCss/Valine/wiki/avatar-setting-for-valine</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment">## Number of comments per page.</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment">## Attributes of reviewers.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">google_search:</span> <span class="literal">true</span> <span class="comment">## Use Google search, true/false.</span></span><br><span class="line"><span class="attr">baidu_search:</span> <span class="literal">false</span> <span class="comment">## Use Baidu search, true/false.</span></span><br><span class="line"><span class="attr">swiftype:</span> <span class="comment">## Your swiftype_key, e.g. m7b11ZrsT8Me7gzApciT</span></span><br><span class="line"><span class="attr">tinysou:</span> <span class="comment">## Your tinysou_key, e.g. 4ac092ad8d749fdc6293</span></span><br><span class="line"><span class="attr">self_search:</span> <span class="literal">false</span> <span class="comment">## Use a jQuery-based local search engine, true/false.</span></span><br><span class="line"><span class="attr">google_analytics:</span> <span class="comment">## Your Google Analytics tracking id, e.g. UA-42425684-2</span></span><br><span class="line"><span class="attr">baidu_analytics:</span> <span class="comment">## Your Baidu Analytics tracking id, e.g. 8006843039519956000</span></span><br><span class="line"><span class="attr">show_category_count:</span> <span class="literal">false</span> <span class="comment">## If you want to show the count of categories in the sidebar widget please set the value to true.</span></span><br><span class="line"><span class="attr">toc_number:</span> <span class="literal">true</span> <span class="comment">## If you want to add list number to toc please set the value to true.</span></span><br><span class="line"><span class="attr">shareto:</span> <span class="literal">false</span> <span class="comment">## If you want to use the share button please set the value to true, you must have hexo-helper-qrcode installed.</span></span><br><span class="line"><span class="attr">busuanzi:</span> <span class="literal">false</span> <span class="comment">## If you want to use Busuanzi page views please set the value to true.</span></span><br><span class="line"><span class="attr">widgets_on_small_screens:</span> <span class="literal">false</span> <span class="comment">## Set to true to enable widgets on small screens.</span></span><br><span class="line"><span class="attr">canvas_nest:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span> <span class="comment">## If you want to use dynamic background please set the value to true, you can also fill the following parameters to customize the dynamic effect, or just leave them blank to keep the default effect.</span></span><br><span class="line">  <span class="attr">color:</span> <span class="comment">## RGB value of the color, e.g. "100,99,98"</span></span><br><span class="line">  <span class="attr">opacity:</span> <span class="comment">## Transparency of lines, e.g. "0.7"</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="comment">## The z-index property of the background, e.g. "-1"</span></span><br><span class="line">  <span class="attr">count:</span> <span class="comment">## Quantity of lines, e.g. "150"</span></span><br><span class="line"><span class="attr">donate:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span> <span class="comment">## If you want to show the donate button after each post, please set the value to true and fill the following items according to your need. You can also enable donate button in a page by adding a "donate: true" item to the front-matter.</span></span><br><span class="line">  <span class="attr">github:</span> <span class="comment">## GitHub URL, e.g. [](https://github.com/Kaiyuan/donate-page)</span></span><br><span class="line">  <span class="attr">alipay_qr:</span> <span class="comment">## Path of Alipay QRcode image, e.g. /img/AliPayQR.png</span></span><br><span class="line">  <span class="attr">wechat_qr:</span> <span class="comment">## Path of Wechat QRcode image, e.g. /img/WeChatQR.png</span></span><br><span class="line">  <span class="attr">btc_qr:</span> <span class="comment">## Path of Bitcoin QRcode image, e.g. /img/BTCQR.png</span></span><br><span class="line">  <span class="attr">btc_key:</span> <span class="comment">## Bitcoin key, e.g. 1KuK5eK2BLsqpsFVXXSBG5wbSAwZVadt6L</span></span><br><span class="line">  <span class="attr">paypal_url:</span> <span class="comment">## Paypal URL, e.g. https://paypal.me/tufu9441</span></span><br><span class="line"></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">page:</span> <span class="string">home</span></span><br><span class="line">    <span class="attr">directory:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">page:</span> <span class="string">archive</span></span><br><span class="line">    <span class="attr">directory:</span> <span class="string">archives/</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">page:</span> <span class="string">about</span></span><br><span class="line">    <span class="attr">directory:</span> <span class="string">about/</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">page:</span> <span class="string">rss</span></span><br><span class="line">    <span class="attr">directory:</span> <span class="string">atom.xml</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fa-rss</span></span><br><span class="line"></span><br><span class="line"><span class="attr">widgets:</span> <span class="comment">## Six widgets in sidebar provided: search, category, tag, recent_posts, rencent_comments and links.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">search</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">category</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">tag</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">recent_posts</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">recent_comments</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">links</span></span><br><span class="line"></span><br><span class="line"><span class="attr">links:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">site-name1</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">http://www.example1.com/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">site-name2</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">http://www.example2.com/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">site-name3</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">http://www.example3.com/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">timeline:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">num:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">word:</span> <span class="number">2014</span><span class="string">/06/12-Start</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">num:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">word:</span> <span class="number">2014</span><span class="string">/11/29-XXX</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">num:</span> <span class="number">3</span></span><br><span class="line">    <span class="attr">word:</span> <span class="number">2015</span><span class="string">/02/18-DDD</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">num:</span> <span class="number">4</span></span><br><span class="line">    <span class="attr">word:</span> <span class="string">More</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Static files</span></span><br><span class="line"><span class="attr">js:</span> <span class="string">js</span></span><br><span class="line"><span class="attr">css:</span> <span class="string">css</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Theme version</span></span><br><span class="line"><span class="attr">version:</span> <span class="number">0.0</span><span class="number">.0</span></span><br></pre></td></tr></table></figure><ul><li>fancybox - 是否启用<a href="http://fancyapps.com/fancybox/" target="_blank" rel="noopener">Fancybox</a>图片灯箱效果</li><li>disqus - <a href="https://disqus.com/" target="_blank" rel="noopener">Disqus评论</a> shortnam</li><li>uyan - <a href="http://www.uyan.cc/" target="_blank" rel="noopener">友言评论</a> id</li><li>livere - <a href="https://livere.com/" target="_blank" rel="noopener">来必力评论</a> data-uid</li><li>changyan - <a href="http://changyan.kuaizhan.com/" target="_blank" rel="noopener">畅言评论</a> appid</li><li>gitment - <a href="https://github.com/imsun/gitment" target="_blank" rel="noopener">Gitment评论</a>相关参数</li><li>gitalk - <a href="https://github.com/gitalk/gitalk" target="_blank" rel="noopener">Gitalk评论</a>相关参数</li><li>valine - <a href="https://valine.js.org/" target="_blank" rel="noopener">Valine评论</a>相关参数</li><li>google_search - 默认使用Google搜索引擎</li><li>baidu_search - 若想使用百度搜索，将其设定为<code>true</code>。</li><li>swiftype - <a href="https://swiftype.com/" target="_blank" rel="noopener">Swiftype</a> 站内搜索key</li><li>tinysou - <a href="http://tinysou.com/" target="_blank" rel="noopener">微搜索</a> key</li><li>self_search - 基于jQuery的<a href="http://hahack.com/codes/local-search-engine-for-hexo" target="_blank" rel="noopener">本地搜索引擎</a>，需要安装<a href="https://github.com/PaicHyperionDev/hexo-generator-search" target="_blank" rel="noopener">hexo-generator-search</a>插件使用。</li><li>google_analytics - <a href="https://www.google.com/analytics/" target="_blank" rel="noopener">Google Analytics</a> 跟踪ID</li><li>baidu_analytics - <a href="http://tongji.baidu.com/" target="_blank" rel="noopener">百度统计</a> 跟踪ID</li><li>show_category_count - 是否显示侧边栏分类数目</li><li>toc_number - 是否显示文章中目录列表自动编号</li><li>shareto - 是否使用分享按鈕，需要安装<a href="https://github.com/yscoder/hexo-helper-qrcode" target="_blank" rel="noopener">hexo-helper-qrcode</a>插件使用</li><li>busuanzi - 是否使用<a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子</a>页面访问计数</li><li>widgets_on_small_screens - 是否在移动设备屏幕底部显示侧边栏</li><li><a href="https://github.com/hustcc/canvas-nest.js/blob/master/README-zh.md" target="_blank" rel="noopener">canvas_nest</a> - 是否使用canvas动态背景</li><li>donate - 是否启用捐赠按钮</li><li>menu - 自定义页面及菜单，依照已有格式填写。填写后请在<code>source</code>目录下建立相应名称的文件夹，并包含<code>index.md</code>文件，以正确显示页面。导航菜单中集成了<a href="http://fontawesome.io/" target="_blank" rel="noopener">FontAwesome</a>图标字体，可以在<a href="http://fontawesome.io/icons/" target="_blank" rel="noopener">这里</a>选择新的图标，并按照相关说明使用。</li><li>widgets - 选择和排列希望使用的侧边栏小工具。</li><li>links - 友情链接，请依照格式填写。</li><li>timeline - 网站历史时间线，在页面<code>front-matter</code>中设置<code>layout: timeline</code>可显示。</li><li>Static files - 静态文件存储路径，方便设置CDN缓存。</li><li>Theme version - 主题版本，便于静态文件更新后刷新CDN缓存。</li></ul><h2 id="主题特性"><a href="#主题特性" class="headerlink" title="主题特性"></a>主题特性</h2><h3 id="网站图标"><a href="#网站图标" class="headerlink" title="网站图标"></a>网站图标</h3><p>若要设置网站Favicon，可以将<strong>favicon.ico</strong>放在Hexo根目录的<code>source</code>文件夹下，建议的大小：32px*32px。</p><p>若要为网站添加苹果设备图标，请将命名为<strong>apple-touch-icon.png</strong>的图片放在同样的位置，建议的大小：114px*114px。</p><h3 id="文章摘要"><a href="#文章摘要" class="headerlink" title="文章摘要"></a>文章摘要</h3><p>首页默认显示文章摘要而非全文，可以在文章的<code>front-matter</code>中填写一项<code>description:</code>来设置你想显示的摘要，或者直接在文章内容中插入<code>&lt;!--more--&gt;</code>以隐藏后面的内容。<br>若两者都未设置，则自动截取文章第一段作为摘要。</p><h3 id="添加页面"><a href="#添加页面" class="headerlink" title="添加页面"></a>添加页面</h3><p>在<code>source</code>目录下建立相应名称的文件夹，然后在文件夹中建立<code>index.md</code>文件，并在<code>index.md</code>的<code>front-matter</code>中设置layout为<code>layout: page</code>。若需要单栏页面，就将layout设置为 <code>layout: single-column</code>。</p><h3 id="文章目录"><a href="#文章目录" class="headerlink" title="文章目录"></a>文章目录</h3><p>在文章的<code>front-matter</code>中添加<code>toc: true</code>即可让该篇文章显示目录。</p><h3 id="文章评论"><a href="#文章评论" class="headerlink" title="文章评论"></a>文章评论</h3><p>文章和页面的评论功能可以通过在<code>front-matter</code>中设置<code>comments: true</code>或<code>comments: false</code>来进行开启或关闭（默认开启）。</p><h3 id="语法高亮"><a href="#语法高亮" class="headerlink" title="语法高亮"></a>语法高亮</h3><p>要启用代码高亮，请在Hexo目录的<code>_config.yml</code>中将<code>highlight</code>选项按照如下设置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span></span><br></pre></td></tr></table></figure><h3 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h3><p>要启用数学公式支持，请在Hexo目录的<code>_config.yml</code>中添加：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>并在相应文章的<code>front-matter</code>中添加<code>mathjax: true</code>，例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Test Math</span><br><span class="line">date: 2016-04-05 14:16:00</span><br><span class="line">categories: math</span><br><span class="line">mathjax: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>数学公式的默认定界符是<code>$$...$$</code>和<code>\\[...\\]</code>（对于块级公式），以及<code>$...$</code>和<code>\\(...\\)</code>（对于行内公式）。</p><p>但是，如果你的文章内容中经常出现美元符号“<code>$</code>”, 或者说你想将“<code>$</code>”用作美元符号而非行内公式的定界符，请在Hexo目录的<code>_config.yml</code>中添加：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mathjax2:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>而不是<code>mathjax: true</code>。 相应地，在需要使用数学公式的文章的<code>front-matter</code>中也添加<code>mathjax2: true</code>。</p><p>[示例](<a href="http://zhongpu.info/2016/05/06/Mathjax" target="_blank" rel="noopener">http://zhongpu.info/2016/05/06/Mathjax</a> and Hexo/)。</p><h3 id="支持语言"><a href="#支持语言" class="headerlink" title="支持语言"></a>支持语言</h3><p>目前支持简体中文（zh-CN），繁体中文（zh-TW），英语（en），法语（fr-FR），德语（de-DE），韩语（ko）和西班牙语（es-ES），欢迎翻译至其它语言。</p><h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><ul><li>检查一下终端当前的目录是否为Hexo的根目录，并包含<code>source/</code>和<code>themes/</code>。</li><li>使用过程中遇到问题欢迎提交<a href="https://github.com/tufu9441/maupassant-hexo/issues" target="_blank" rel="noopener">issue</a>。</li></ul><h2 id="浏览器支持"><a href="#浏览器支持" class="headerlink" title="浏览器支持"></a>浏览器支持</h2><p>    <i class="fa fa-internet-explorer fa-2x"></i>    <i class="fa fa-chrome fa-2x"></i>    <i class="fa fa-firefox fa-2x"></i>    <i class="fa fa-safari fa-2x"></i>    <i class="fa fa-opera fa-2x"></i></p><p>（注：Internet Explorer浏览器仅支持IE9以上版本。）</p><h2 id="贡献代码"><a href="#贡献代码" class="headerlink" title="贡献代码"></a>贡献代码</h2><p>接受各种形式的贡献，包括不限于提交问题与需求，修复代码。等待您的<code>Pull Request</code>。</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git快捷键</title>
      <link href="/%E6%8A%80%E8%83%BD/2019-06-07-Git%E5%BF%AB%E6%8D%B7%E4%BD%BF%E7%94%A8.html"/>
      <url>/%E6%8A%80%E8%83%BD/2019-06-07-Git%E5%BF%AB%E6%8D%B7%E4%BD%BF%E7%94%A8.html</url>
      
        <content type="html"><![CDATA[<h2 id="CREATE-创建"><a href="#CREATE-创建" class="headerlink" title="CREATE        创建"></a>CREATE        创建</h2><ul><li><p><strong>Clone an existing repository         克隆现有存储库</strong></p><ul><li><code>$ git clone ssh://user@domain.com/repo.git</code></li></ul></li><li><p><strong>Create a new local repository         创建一个新的本地存储库</strong></p><ul><li><code>$ git init</code></li></ul></li></ul><h2 id="LOCAL-CHANGES-局部变化"><a href="#LOCAL-CHANGES-局部变化" class="headerlink" title="LOCAL CHANGES            局部变化"></a>LOCAL CHANGES            局部变化</h2><ul><li><p><strong>Changed files in your working directory            更改了工作目录中的文件</strong></p><ul><li><code>$ git status</code></li></ul></li><li><p><strong>Changes to tracked files         对已跟踪文件的更改</strong></p><ul><li><code>$ git diff</code></li></ul></li><li><p><strong>Add all current changes to the next commit         将所有当前更改添加到下一个提交</strong></p><ul><li><code>$ git  add .</code></li></ul></li><li><p><strong>Add some changes in  &lt;file&gt; to the next commit         在&lt; file &gt;中添加一些更改到下一次提交</strong></p><ul><li><code>$ git add -p &lt;file&gt;</code></li></ul></li><li><p><strong>Commit all local changes in tracked files         提交跟踪文件中的所有本地更改</strong></p><ul><li><code>$ git commit -a</code></li></ul></li><li><p><strong>Commit previously staged changes         提交以前上演的更改</strong></p><ul><li><code>$ git commit</code></li></ul></li><li><p><strong>Change the last commit [Don‘t amend published commits!]         更改上次提交[不修改已发布的提交!]</strong></p><ul><li><code>$ git commit --amend</code></li></ul></li></ul><h2 id="COMMIT-HISTORY-提交历史记录"><a href="#COMMIT-HISTORY-提交历史记录" class="headerlink" title="COMMIT HISTORY        提交历史记录"></a>COMMIT HISTORY        提交历史记录</h2><ul><li><p><strong>Show all commits, starting with newest         显示所有提交，从最新开始</strong></p><ul><li><code>$ git log</code></li></ul></li><li><p><strong>Show changes over time for a specific file         显示特定文件随时间的变化</strong></p><ul><li><code>$ git log -p &lt;file&gt;</code></li></ul></li><li><p><strong>Who changed what and when in &lt;file&gt;         谁更改了&lt;file&gt;中的内容和时间</strong></p><ul><li><code>$ git blame &lt;file&gt;</code></li></ul></li></ul><h2 id="BRANCHES-amp-TAGS-分支标签"><a href="#BRANCHES-amp-TAGS-分支标签" class="headerlink" title="BRANCHES &amp; TAGS        分支标签"></a>BRANCHES &amp; TAGS        分支标签</h2><ul><li><p><strong>List all existing branches         列出所有现有分支机构</strong></p><ul><li><code>$ git branch -av</code></li></ul></li><li><p><strong>Switch HEAD branch         切换HEAD分支</strong></p><ul><li><code>$ git checkout &lt;branch&gt;</code></li></ul></li><li><p><strong>Create a new branch based on your current HEAD         根据您当前的HEAD创建一个新分支</strong></p><ul><li><code>$ git  branch &lt;new-branch&gt;</code></li></ul></li><li><p><strong>Create a new tracking branch based on  a remote branch         基于远程分支创建新的跟踪分支</strong></p><ul><li><code>$ git checkout --track &lt;remote/bran-ch&gt;</code></li></ul></li><li><p><strong>Delete a local branch         删除本地分支</strong></p><ul><li><code>$ git branch -d &lt;branch&gt;</code></li></ul></li><li><p><strong>Mark the current commit with a tag         使用标记标记当前提交</strong></p><ul><li><code>$ git tag &lt;tag-name&gt;</code></li></ul></li></ul><h2 id="BRANCHES-amp-TAGS"><a href="#BRANCHES-amp-TAGS" class="headerlink" title="BRANCHES &amp; TAGS"></a>BRANCHES &amp; TAGS</h2><ul><li><p><strong>List all currently configured remotes         列出所有当前配置的遥控器</strong></p><ul><li><code>$ git remote -v</code></li></ul></li><li><p><strong>Show information about a remote         显示有关遥控器的信息</strong></p><ul><li><code>$ git remote show &lt;remote&gt;</code></li></ul></li><li><p><strong>Add new remote repository, named &lt;remote&gt;         添加名为&lt;remote&gt;的新远程存储库</strong></p><ul><li><code>$ git remote add &lt;shortname&gt; &lt;url&gt;</code></li></ul></li><li><p><strong>Download all changes from &lt;remote&gt;,   but don’t integrate into HEAD         从&lt; remote&gt;下载所有更改，但不要集成到HEAD中</strong></p><ul><li><code>$ git fetch &lt;remote&gt;</code></li></ul></li><li><p><strong>Download changes and directly merge/integrate  into  HEAD         下载更改并直接合并集成到HEAD中</strong></p><ul><li><code>$ git pull &lt;remote&gt; &lt;branch&gt;</code></li></ul></li><li><p><strong>Publish local changes on a remote         在远程上发布本地更改</strong></p><ul><li><code>$ git push &lt;remote&gt; &lt;branch&gt;</code></li></ul></li><li><p><strong>Delete a branch on the remote         删除遥控器上的分支</strong></p><ul><li><code>$ git branch -dr &lt;remote/branch&gt;</code></li></ul></li><li><p><strong>Publish your tags         发布你的标签</strong></p><ul><li><code>$ git push --tags</code></li></ul></li></ul><h2 id="BRANCHES-amp-TAGS-1"><a href="#BRANCHES-amp-TAGS-1" class="headerlink" title="BRANCHES &amp; TAGS"></a>BRANCHES &amp; TAGS</h2><ul><li><p><strong>Merge &lt;branch&gt; into your current HEAD         将&lt; branch&gt;合并到当前的HEAD中</strong></p><ul><li><code>$ git merge &lt;branch&gt;</code></li></ul></li><li><p><strong>Rebase your current HEAD onto &lt;branch&gt; Don‘t rebase published commits!         将您当前的HEAD重新定位到&lt;branch&gt;不要重新发布已发布的提交！</strong></p><ul><li><code>$ git rebase &lt;branch&gt;</code></li></ul></li><li><p><strong>Abort a rebase         中止重置</strong></p><ul><li><code>$ git rebase --abort</code></li></ul></li><li><p><strong>Continue a rebase after resolving conflicts         解决冲突后继续使用重置</strong></p><ul><li><code>$ git rebase --continue</code></li></ul></li><li><p><strong>Use your configured merge tool to  solve conflicts         使用您配置的合并工具来解决冲突</strong></p><ul><li><code>$ git mergetool</code></li></ul></li><li><p><strong>Use your editor to manually solve conflicts and  (after resolving) mark file as resolved         使用您的编辑器手动解决冲突和（解析后）标记文件已解决</strong></p><ul><li><code>$ git add &lt;resolved-file&gt;</code></li><li><code>$ git rm &lt;resolved-file&gt;</code></li></ul></li></ul><h2 id="UNDO-撤消"><a href="#UNDO-撤消" class="headerlink" title="UNDO        撤消"></a>UNDO        撤消</h2><ul><li><p><strong>Discard all local changes in your working  directory         放弃工作目录中的所有本地更改</strong></p><ul><li><code>$ git reset --hard HEAD</code></li></ul></li><li><p><strong>Discard local changes in a specific file          放弃特定文件中的本地更改</strong></p><ul><li><code>$ git checkout HEAD &lt;file&gt;</code></li></ul></li><li><p><strong>Revert a commit  (by producing a new commit with contrary changes)         恢复提交（通过生成相反更改的新提交）</strong></p><ul><li><code>$ git revert &lt;commit&gt;</code></li></ul></li><li><p><strong>Reset your HEAD pointer to a previous commit …and discard all changes since then         将HEAD指针重置为先前的提交…并放弃此后的所有更改</strong></p><ul><li><code>$ git reset --hard &lt;commit&gt;</code></li></ul></li><li><p><strong>…and preserve all changes as unstaged changes          …并将所有更改保留为未分级更改</strong></p><ul><li><code>$ git reset &lt;commit&gt;</code></li></ul></li><li><p><strong>…and preserve uncommitted local changes         …并保留未提交的本地更改</strong></p><ul><li><code>$ git reset --keep &lt;commit&gt;</code></li></ul></li></ul><h2 id="COMMIT-RELATED-CHANGES-提交相关更改"><a href="#COMMIT-RELATED-CHANGES-提交相关更改" class="headerlink" title="COMMIT RELATED CHANGES        提交相关更改"></a>COMMIT RELATED CHANGES        提交相关更改</h2><p>&emsp;&emsp;<code>A commit should be a wrapper for related changes. For example, fixing two different bugs should produce two separate commits. Small commits make it easier for other de-velopers to understand the changes and roll them back if something went wrong.</code><br>&emsp;&emsp;提交应该是相关更改的包装器。例如，修复两个不同的错误应该产生两个单独的提交。小的提交使其他开发人员更容易理解变化，并在出现问题时将其回滚。<br>&emsp;&emsp;<code>With tools like the staging area and the abi-lity to stage only parts of a file, Git makes it easy to create very granular commits.</code><br>&emsp;&emsp;使用暂存区域和abi-lity等工具只能部署文件的一部分，Git可以轻松创建非常精细的提交。</p><h2 id="COMMIT-OFTEN-承诺"><a href="#COMMIT-OFTEN-承诺" class="headerlink" title="COMMIT OFTEN         承诺"></a>COMMIT OFTEN         承诺</h2><p>&emsp;&emsp;<code>Committing often keeps your commits small and, again, helps you commit only related changes. Moreover, it allows you to share your code more frequently with others. That way it‘s easier for everyone to integrate changes regularly and avoid having merge conflicts. Having few large commits and sharing them rarely, in contrast, makes it hard to solve conflicts.</code><br>&emsp;&emsp;提交通常会使您的提交变小，并且再次帮助您仅提交相关更改。此外，它允许您更频繁地与他人共享您的代码。这样，每个人都可以更容易地定期集成更改并避免出现合并冲突。相比之下，很少有大型提交并且很少共享它们使解决冲突变得困难。</p><h2 id="DON’T-COMMIT-HALF-DONE-WORK-不要做半途而废的工作"><a href="#DON’T-COMMIT-HALF-DONE-WORK-不要做半途而废的工作" class="headerlink" title="DON’T COMMIT HALF-DONE WORK         不要做半途而废的工作"></a>DON’T COMMIT HALF-DONE WORK         不要做半途而废的工作</h2><p>&emsp;&emsp;<code>You should only commit code when it‘s completed. This doesn‘t mean you have to complete a whole, large feature before committing. Quite the contrary: split the feature‘s implementation into logical chunks and remember to commit early and often. But don‘t commit just to have something in the repository before leaving the office at the end of the day. If you‘re tempted to commit just because you need a clean working copy (to check out a branch, pull in changes, etc.) consider using Git‘s «Stash» feature instead.</code><br>&emsp;&emsp;您应该只在代码完成时提交代码。这并不意味着您必须在提交之前完成整个大型功能。恰恰相反：将功能的实现拆分为逻辑块，并记住提前和经常提交。但是，在一天结束离开办公室之前，不要仅仅在存储库中提供一些东西。如果您因为需要干净的工作副本（检查分支，引入更改等）而想要提交，请考虑使用Git的“Stash”功能。</p><h2 id="TEST-CODE-BEFORE-YOU-COMMIT-提交前测试代码"><a href="#TEST-CODE-BEFORE-YOU-COMMIT-提交前测试代码" class="headerlink" title="TEST CODE BEFORE YOU COMMIT             提交前测试代码"></a>TEST CODE BEFORE YOU COMMIT             提交前测试代码</h2><p>&emsp;&emsp;<code>Resist the temptation to commit some-thing that you «think» is completed. Test it thoroughly to make sure it really is completed and has no side effects (as far as one can tell). While committing half-baked things in your local repository only requires you to forgive yourself, having your code tested is even more important when it comes to pushing/sharing your code with others.</code><br>&emsp;&emsp;抵制诱惑你做出“思考”完成的事情。彻底测试，以确保它真的完成，没有副作用（据我们所知）。虽然在本地存储库中提交半生不熟的东西只需要您原谅自己，但在推送与他人共享代码时，测试代码会更加重要。</p><h2 id="WRITE-GOOD-COMMIT-MESSAGES-编写好的提交消息"><a href="#WRITE-GOOD-COMMIT-MESSAGES-编写好的提交消息" class="headerlink" title="WRITE GOOD COMMIT MESSAGES             编写好的提交消息"></a>WRITE GOOD COMMIT MESSAGES             编写好的提交消息</h2><p>&emsp;&emsp;<code>Begin your message with a short summary of your changes (up to 50 characters as a gui-deline). Separate it from the following body by including a blank line. The body of your message should provide detailed answers to the following questions:</code><br>&emsp;&emsp;以您的更改的简短摘要开始您的消息（最多50个字符作为gui-deline）。通过包含空行将其与以下主体分开。您的信息正文应提供以下问题的详细答案：<br>&emsp;&emsp;* <code>What was the motivation for the change?</code><br>&emsp;&emsp;改变的动机是什么？<br>&emsp;&emsp;* <code>How does it differ from the previousimplementation?</code><br>&emsp;&emsp;它与以前的实现有何不同？<br>&emsp;&emsp;<code>Use the imperative, present tense («change», not «changed» or «changes») to be consistent with generated messages from commands like git merge.</code><br>&emsp;&emsp;使用命令式，现在时（“更改”，而不是“更改”或“更改”）与来自git merge等命令的生成消息一致。</p><h2 id="VERSION-CONTROL-IS-NOT-A-BACKUP-SYSTEM-版本控制不是备份系统"><a href="#VERSION-CONTROL-IS-NOT-A-BACKUP-SYSTEM-版本控制不是备份系统" class="headerlink" title="VERSION CONTROL IS NOT A BACKUP SYSTEM         版本控制不是备份系统"></a>VERSION CONTROL IS NOT A BACKUP SYSTEM         版本控制不是备份系统</h2><p>&emsp;&emsp;<code>Having your files backed up on a remote server is a nice side effect of having a version control system. But you should not use your VCS like it was a backup system. When doing version control, you should pay attention to committing semantically (see «related chan-ges») - you shouldn‘t just cram in files.</code><br>&emsp;&emsp;在远程服务器上备份文件是拥有版本控制系统的一个很好的副作用。但是你不应该使用你的VCS，就像它是一个备份系统。在进行版本控制时，你应该注意语义上的提交（参见“相关的chan-ges”） - 你不应该只是填入文件。</p><h2 id="USE-BRANCHES-使用分支"><a href="#USE-BRANCHES-使用分支" class="headerlink" title="USE BRANCHES         使用分支"></a>USE BRANCHES         使用分支</h2><p>&emsp;&emsp;<code>Branching is one of Git‘s most powerful features - and this is not by accident: quick and easy branching was a central requirement from day one. Branches are the perfect tool to help you avoid mixing up different lines of development. You should use branches extensively in your development workflows: for new features, bug fixes, ideas…</code><br>&emsp;&emsp;分支是Git最强大的功能之一 - 这不是偶然的：从第一天开始，快速简便的分支是一个核心要求。分支机构是帮助您避免混淆不同开发线的完美工具。您应该在开发工作流程中广泛使用分支：新功能，错误修复，想法……</p><h2 id="AGREE-ON-A-WORKFLOW-商定工作流程"><a href="#AGREE-ON-A-WORKFLOW-商定工作流程" class="headerlink" title="AGREE ON A WORKFLOW 商定工作流程"></a>AGREE ON A WORKFLOW 商定工作流程</h2><p>&emsp;&emsp;<code>Git lets you pick from a lot of different work-flows: long-running branches, topic bran-ches, merge or rebase, git-flow… Which one you choose depends on a couple of factors: your project, your overall development and deployment workflows and (maybe most importantly) on your and your teammates‘ personal preferences. However you choose to work, just make sure to agree on a common workflow that everyone follows.</code><br>&emsp;&emsp;Git允许您从许多不同的工作流程中选择：长期运行的分支，主题分支，合并或变基，git-flow ……您选择哪一个取决于几个因素：您的项目，整体开发和部署工作流程和（可能最重要的）你和​​你的队友的个人偏好。无论您选择工作，只需确保就每个人都遵循的共同工作流程达成一致。</p><h2 id="HELP-amp-DOCUMENTATION-帮助和文档"><a href="#HELP-amp-DOCUMENTATION-帮助和文档" class="headerlink" title="HELP &amp; DOCUMENTATION             帮助和文档"></a>HELP &amp; DOCUMENTATION             帮助和文档</h2><ul><li><strong>Get help on the command line         在命令行上获取帮助</strong><ul><li><code>$ git help &lt;command&gt;</code></li></ul></li></ul><h2 id="FREE-ONLINE-RESOURCES-免费在线资源"><a href="#FREE-ONLINE-RESOURCES-免费在线资源" class="headerlink" title="FREE ONLINE RESOURCES         免费在线资源"></a>FREE ONLINE RESOURCES         免费在线资源</h2><p><em><a href="http://www.git-tower.com/learn" target="_blank" rel="noopener">http://www.git-tower.com/learn</a></em><br><em><a href="http://rogerdudler.github.io/git-guide/" target="_blank" rel="noopener">http://rogerdudler.github.io/git-guide/</a></em><br><em><a href="http://www.git-scm.org/" target="_blank" rel="noopener">http://www.git-scm.org/</a></em></p>]]></content>
      
      
      <categories>
          
          <category> 技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSM整合</title>
      <link href="/%E6%A1%86%E6%9E%B6/2019-06-07-SSM%E6%95%B4%E5%90%88.html"/>
      <url>/%E6%A1%86%E6%9E%B6/2019-06-07-SSM%E6%95%B4%E5%90%88.html</url>
      
        <content type="html"><![CDATA[<h1 id="SSM整合"><a href="#SSM整合" class="headerlink" title="SSM整合"></a>SSM整合</h1><h2 id="SSM的概念"><a href="#SSM的概念" class="headerlink" title="SSM的概念"></a>SSM的概念</h2><p>SSM即是 SpringMVC + Spring + Mybatis 的框架组合，使用这一套组合可以满足最基本的数据库、页面和业务逻辑的项目需求。</p>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>迁移CSDN文章到本地hexo</title>
      <link href="/%E5%8D%9A%E5%AE%A2/2019-06-03-%E8%BF%81%E7%A7%BBCSDN%E6%96%87%E7%AB%A0%E5%88%B0%E6%9C%AC%E5%9C%B0hexo.html"/>
      <url>/%E5%8D%9A%E5%AE%A2/2019-06-03-%E8%BF%81%E7%A7%BBCSDN%E6%96%87%E7%AB%A0%E5%88%B0%E6%9C%AC%E5%9C%B0hexo.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>&emsp;&emsp;CSDN的文章有很多非常好的，但是自己去复制的话又很麻烦，所以自己做一个基于Jsoup的Java爬虫的demo，可以通过用户名批量转化，也可以通过某一个文章的链接单章转化。</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="CSDN网站爬取规则提取"><a href="#CSDN网站爬取规则提取" class="headerlink" title="CSDN网站爬取规则提取"></a>CSDN网站爬取规则提取</h2><p><strong>使用CSS选择器进行规则的提取</strong></p><h3 id="文章列表块的提取"><a href="#文章列表块的提取" class="headerlink" title="文章列表块的提取"></a>文章列表块的提取</h3><ul><li>文章标题链接：div.article-item-box&gt;a<ul><li>有时候文章列表中会出现无效的404文章，在最后爬取时会自动忽略</li></ul></li><li>文章标题：</li></ul><h1 id="基础工具包"><a href="#基础工具包" class="headerlink" title="基础工具包"></a>基础工具包</h1>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
